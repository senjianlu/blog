<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>森见鹿的博客</title>
  
  <subtitle>记录 | 学习 | 分享</subtitle>
  <link href="https://senjianlu.com/atom.xml" rel="self"/>
  
  <link href="https://senjianlu.com/"/>
  <updated>2025-08-31T07:00:00.000Z</updated>
  <id>https://senjianlu.com/</id>
  
  <author>
    <name>Rabbir</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为 acme.sh 配置 Cloudflare 的 DNS 验证来申请泛域名 SSL 证书</title>
    <link href="https://senjianlu.com/2025/08/31/acme_cloudflare_certificate_ssl/"/>
    <id>https://senjianlu.com/2025/08/31/acme_cloudflare_certificate_ssl/</id>
    <published>2025-08-31T07:00:00.000Z</published>
    <updated>2025-08-31T07:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://easycrawl.dev/">easycrawl.dev</a> 网站需要一个 SSL 证书，但是不清楚后面会有多少子域名，因此直接申请泛域名证书吧。<br>顺便提一下，<code>dev</code> 后缀的域名是强制使用 <code>HTTPS</code> 的，用 <code>HTTP</code> 访问可能会报以下错误：  </p><blockquote><p>网址为 <a href="https://easycrawl.dev/">https://easycrawl.dev/</a> 的网页可能暂时无法连接，或者它已永久性地移动到了新网址。<br><code>ERR_SSL_UNRECOGNIZED_NAME_ALERT</code></p></blockquote><span id="more"></span><hr><h2 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h2><ol><li>安装 acme.sh</li><li>配置 Cloudflare 的 DNS 验证</li><li>创建可以修改 Cloudflare DNS 的 API Token</li><li>配置 acme.sh 使用 Cloudflare 的 DNS 验证</li><li>申请泛域名 SSL 证书</li><li>安装 Nginx</li><li>安装证书并配置自动更新</li><li>配置 Nginx 使用 SSL 证书</li></ol><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="一、安装-acme-sh"><a href="#一、安装-acme-sh" class="headerlink" title="一、安装 acme.sh"></a>一、安装 acme.sh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装所需软件</span></span><br><span class="line">apt-get install curl</span><br><span class="line">apt-get install socat</span><br><span class="line"><span class="comment"># 安装 acme</span></span><br><span class="line">curl https://get.acme.sh | sh</span><br><span class="line"><span class="comment"># 添加软链接</span></span><br><span class="line"><span class="built_in">ln</span> -s  /root/.acme.sh/acme.sh /usr/local/bin/acme.sh</span><br><span class="line"><span class="comment"># 查看 acme.sh 版本</span></span><br><span class="line">acme.sh --version</span><br></pre></td></tr></table></figure><p><img src="https://image.senjianlu.com/blog/2025-08-31/201142.png" alt="v3.1.2"></p><h3 id="二、配置-Cloudflare-的-DNS-验证"><a href="#二、配置-Cloudflare-的-DNS-验证" class="headerlink" title="二、配置 Cloudflare 的 DNS 验证"></a>二、配置 Cloudflare 的 DNS 验证</h3><p>我是在 Namecheap 上注册的域名，因此需要先在 Namecheap 上配置 DNS 解析。<br>进入控制台选择对应的域名，点击 <code>Manage</code> 进入域名管理页面：<br><img src="https://image.senjianlu.com/blog/2025-08-31/201251.png" alt="点击 Manage 按钮"><br>选择 <code>Custom DNS</code> 并填入 Cloudflare 分配给你的 <code>Nameserver</code>：<br><img src="https://image.senjianlu.com/blog/2025-08-31/201409.png" alt="填写两个 Nameserver">  </p><blockquote><p>在你的 Cloudflare 控制台选择 <code>加入域</code>（添加域名）后继续操作，会在某一步提供给你两个 <code>Nameserver</code>：<br><img src="https://image.senjianlu.com/blog/2025-08-31/201617.png" alt="加入域"></p></blockquote><h3 id="三、创建可以修改-Cloudflare-DNS-的-API-Token"><a href="#三、创建可以修改-Cloudflare-DNS-的-API-Token" class="headerlink" title="三、创建可以修改 Cloudflare DNS 的 API Token"></a>三、创建可以修改 Cloudflare DNS 的 API Token</h3><p>进入 Cloudflare 的<a href="https://dash.cloudflare.com/profile/api-tokens">用户 API 令牌</a>页面，选择 <code>创建令牌</code>：<br><img src="https://image.senjianlu.com/blog/2025-08-31/201905.png" alt="创建令牌"><br>选择 <code>编辑区域 DNS</code> 的模板：<br><img src="https://image.senjianlu.com/blog/2025-08-31/201941.png" alt="编辑区域 DNS"><br>选择特定的区域（域名）：<br><img src="https://image.senjianlu.com/blog/2025-08-31/202040.png" alt="选择特定的区域"><br>之后一步步确认并创建即可。<br>创建完成后，你就拥有了下面三个内容：  </p><ul><li><code>token</code>: xxxxxxxxxxxxxxxxx8faebc</li><li><code>zone_id</code>: 023e105f4ecefXXXXXxxxxxxxxx</li><li><code>account_id</code>: 023e105f4ecefXXXXXxxxxxxxxx</li></ul><blockquote><p>其中 <code>zone_id</code> 和 <code>account_id</code> 是固定的，<code>token</code> 是刚刚生成的。<br><code>zone_id</code>（区域 ID）和<code>account_id</code>（账户 ID）在 Cloudflare 对应域名的控制台右上角可以找到：<br><img src="https://image.senjianlu.com/blog/2025-08-31/202510.png" alt="区域 ID 和账户 ID">  </p></blockquote><h3 id="四、配置-acme-sh-使用-Cloudflare-的-DNS-验证"><a href="#四、配置-acme-sh-使用-Cloudflare-的-DNS-验证" class="headerlink" title="四、配置 acme.sh 使用 Cloudflare 的 DNS 验证"></a>四、配置 acme.sh 使用 Cloudflare 的 DNS 验证</h3><p>其实只要设置一下环境变量即可：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> CF_Token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"><span class="built_in">export</span> CF_Zone_ID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line"><span class="built_in">export</span> CF_Account_ID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx</span><br></pre></td></tr></table></figure><h3 id="五、申请泛域名-SSL-证书"><a href="#五、申请泛域名-SSL-证书" class="headerlink" title="五、申请泛域名 SSL 证书"></a>五、申请泛域名 SSL 证书</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --issue --dns dns_cf -d easycrawl.dev -d <span class="string">&#x27;*.easycrawl.dev&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>如果出现下面的错误：</p><blockquote><p>[Sun Aug 31 13:33:01 BST 2025] Using CA: <a href="https://acme.zerossl.com/v2/DV90">https://acme.zerossl.com/v2/DV90</a><br>[Sun Aug 31 13:33:02 BST 2025] No EAB credentials found for ZeroSSL, let’s obtain them<br>[Sun Aug 31 13:33:02 BST 2025] acme.sh is using ZeroSSL as default CA now.<br>[Sun Aug 31 13:33:02 BST 2025] Please update your account with an email address first.<br>[Sun Aug 31 13:33:02 BST 2025] acme.sh –register-account -m <a href="mailto:&#109;&#121;&#64;&#101;&#x78;&#97;&#x6d;&#x70;&#x6c;&#101;&#x2e;&#x63;&#x6f;&#x6d;">my@example.com</a><br>[Sun Aug 31 13:33:02 BST 2025] See: <a href="https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA">https://github.com/acmesh-official/acme.sh/wiki/ZeroSSL.com-CA</a><br>[Sun Aug 31 13:33:02 BST 2025] Please check log file for more details: &#x2F;root&#x2F;.acme.sh&#x2F;acme.sh.log  </p></blockquote><p>则需要先随便使用一个邮箱注册一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acme.sh --register-account -m example@example.com</span><br></pre></td></tr></table></figure><p>之后再申请证书即可。  </p></blockquote><p>没问题的话，大概 30 秒证书就申请成功了：<br><img src="https://image.senjianlu.com/blog/2025-08-31/203610.png" alt="证书申请成功">  </p><h3 id="六、安装-Nginx"><a href="#六、安装-Nginx" class="headerlink" title="六、安装 Nginx"></a>六、安装 Nginx</h3><p>你可以简单地安装旧版本的 Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install nginx</span><br></pre></td></tr></table></figure><p>或者使用我的脚本来安装最新版的：<a href="https://gist.github.com/senjianlu/08f55ac6ade621fed7bcebf14fc688df">rabbir&#x2F;nginx.bash</a>  </p><h3 id="七、安装证书并配置自动更新"><a href="#七、安装证书并配置自动更新" class="headerlink" title="七、安装证书并配置自动更新"></a>七、安装证书并配置自动更新</h3><p>我习惯将证书安装到 <code>/etc/nginx/ssl</code> 目录下，因此使用下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -vp /etc/nginx/ssl/easycrawl.dev</span><br><span class="line">acme.sh --install-cert -d easycrawl.dev \</span><br><span class="line">  --fullchain-file /etc/nginx/ssl/easycrawl.dev/certificate.crt \</span><br><span class="line">  --key-file /etc/nginx/ssl/easycrawl.dev/private.key \</span><br><span class="line">  --reloadcmd <span class="string">&quot;systemctl reload nginx&quot;</span></span><br></pre></td></tr></table></figure><p><strong>之后每隔大概 2 个月，acme.sh 会自动更新证书，并使用 <code>systemctl reload nginx</code> 重新加载 Nginx 来使用新的证书。</strong></p><h3 id="八、配置-Nginx-使用-SSL-证书"><a href="#八、配置-Nginx-使用-SSL-证书" class="headerlink" title="八、配置 Nginx 使用 SSL 证书"></a>八、配置 Nginx 使用 SSL 证书</h3><p>我的 <code>/etc/nginx/conf.d/default.conf</code> 文件内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"># 非域名访问返回 500 错误</span><br><span class="line">server &#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    listen      [::]:80;</span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        return      500;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # 特殊的证书认证用的路径</span><br><span class="line">    location /.well-known/acme-challenge/ &#123;</span><br><span class="line">        # acme.sh --webroot 模式，认证文件生成后放置的路径</span><br><span class="line">        root /var/acme/webroot/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 非域名访问防止发送 SSL 证书</span><br><span class="line">server &#123;</span><br><span class="line">    listen      443 ssl default_server;</span><br><span class="line">    server_name _;</span><br><span class="line"> </span><br><span class="line">    ssl_protocols           TLSv1.2 TLSv1.3;</span><br><span class="line">    # 启用拒绝 TLS 握手</span><br><span class="line">    ssl_reject_handshake    on;</span><br><span class="line">    # SSL Session 缓存，不设置的话无缓存配置不生效</span><br><span class="line">    ssl_session_cache       shared:SSL:10m;</span><br><span class="line">    ssl_session_timeout     10m;</span><br><span class="line"></span><br><span class="line">    # log 位置自行替换</span><br><span class="line">    access_log  /var/log/nginx/host.access.log;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要新建一下 <code>api.easycrawl.dev.conf</code> 文件来让子域名使用泛域名证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/conf.d/api.easycrawl.dev.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen      443 ssl;</span><br><span class="line">    server_name api.easycrawl.dev;</span><br><span class="line"></span><br><span class="line">    # SSL 配置</span><br><span class="line">    ssl_certificate             /etc/nginx/ssl/easycrawl.dev/certificate.crt;</span><br><span class="line">    ssl_certificate_key         /etc/nginx/ssl/easycrawl.dev/private.key;</span><br><span class="line">    ssl_protocols               TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;</span><br><span class="line">    ssl_ciphers                 ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8000;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-Proto $scheme;</span><br><span class="line">        proxy_set_header X-Forwarded-Port $server_port;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        # This allows the ability for the execute shell window to remain open for up to 15 minutes. Without this parameter, the default is 1 minute and will automatically close.</span><br><span class="line">        proxy_read_timeout 900s;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后重启 Nginx 即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl reload nginx</span><br></pre></td></tr></table></figure><blockquote><p>不一样版本的 Nginx 支持的配置不一样，一般出错的话删除对应的配置项即可。</p></blockquote><p>再次访问 <a href="https://api.easycrawl.dev/docs">https://api.easycrawl.dev/docs</a> 就可以看到 SSL 证书已经生效了：<br><img src="https://image.senjianlu.com/blog/2025-08-31/205121.png" alt="SSL 证书已经生效"><br>结束。</p><hr><p>参考资料：</p><ul><li><a href="https://www.cnblogs.com/blogforeverything/p/18426804.html">acme+cloudflare生成免费证书（自动续期）</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://easycrawl.dev/&quot;&gt;easycrawl.dev&lt;/a&gt; 网站需要一个 SSL 证书，但是不清楚后面会有多少子域名，因此直接申请泛域名证书吧。&lt;br&gt;顺便提一下，&lt;code&gt;dev&lt;/code&gt; 后缀的域名是强制使用 &lt;code&gt;HTTPS&lt;/code&gt; 的，用 &lt;code&gt;HTTP&lt;/code&gt; 访问可能会报以下错误：  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;网址为 &lt;a href=&quot;https://easycrawl.dev/&quot;&gt;https://easycrawl.dev/&lt;/a&gt; 的网页可能暂时无法连接，或者它已永久性地移动到了新网址。&lt;br&gt;&lt;code&gt;ERR_SSL_UNRECOGNIZED_NAME_ALERT&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础操作" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="Linux" scheme="https://senjianlu.com/tags/Linux/"/>
    
    <category term="SSL" scheme="https://senjianlu.com/tags/SSL/"/>
    
    <category term="Cloudflare" scheme="https://senjianlu.com/tags/Cloudflare/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 24.04 下安装桌面环境并进行远程连接</title>
    <link href="https://senjianlu.com/2025/08/30/ubuntu2404_install_desktop_and_vnc/"/>
    <id>https://senjianlu.com/2025/08/30/ubuntu2404_install_desktop_and_vnc/</id>
    <published>2025-08-30T08:00:00.000Z</published>
    <updated>2025-08-30T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想在 Ubuntu 24.04 服务器上安装下 Steam，但是似乎需要图形化界面。<br>而由于一般云服务器厂商都是提供的 server 版本，因此需要安装下桌面环境。  </p><span id="more"></span><hr><h2 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h2><ol><li>安装 X Window System</li><li>安装 GNOME 的显示管理器 gdm3</li><li>安装 Ubuntu 桌面</li><li>安装 GNOME 依赖包</li><li>安装 Xrdp 服务</li><li>进行远程连接</li></ol><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="一、安装-X-Window-System"><a href="#一、安装-X-Window-System" class="headerlink" title="一、安装 X Window System"></a>一、安装 X Window System</h3><blockquote><p>关于 X Window System：</p><blockquote><p>X 窗口系统（X Window System，也常称为 X11 或 X，天窗口系统）是一种以位图方式显示的软件窗口系统。最初是 1984 年麻省理工学院的研究，之后变成 UNIX、类 UNIX、以及 OpenVMS 等操作系统所一致适用的标准化软件工具包及显示架构的运作协议。</p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> su</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line">apt-get install -y x-window-system-core</span><br></pre></td></tr></table></figure><h3 id="二、安装-GNOME-的显示管理器-gdm3"><a href="#二、安装-GNOME-的显示管理器-gdm3" class="headerlink" title="二、安装 GNOME 的显示管理器 gdm3"></a>二、安装 GNOME 的显示管理器 gdm3</h3><blockquote><p>关于 gdm3：</p><blockquote><p>gdm3 是 GNOME 显示管理器 (GNOME Display Manager) 的缩写，它是 GNOME 桌面环境的默认显示管理器，负责提供图形化的登录界面，并在用户成功验证后启动GNOME 会话。</p></blockquote></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gdm3</span><br></pre></td></tr></table></figure><blockquote><p>出现下面错误的时候不要紧张：</p><blockquote><p>gdm.service is not active, cannot reload.</p></blockquote><p>之后重启就能解决这个问题。</p></blockquote><h3 id="三、安装-Ubuntu-桌面"><a href="#三、安装-Ubuntu-桌面" class="headerlink" title="三、安装 Ubuntu 桌面"></a>三、安装 Ubuntu 桌面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y ubuntu-desktop</span><br></pre></td></tr></table></figure><h3 id="四、安装-GNOME-依赖包"><a href="#四、安装-GNOME-依赖包" class="headerlink" title="四、安装 GNOME 依赖包"></a>四、安装 GNOME 依赖包</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal</span><br></pre></td></tr></table></figure><h3 id="五、安装-Xrdp-服务"><a href="#五、安装-Xrdp-服务" class="headerlink" title="五、安装 Xrdp 服务"></a>五、安装 Xrdp 服务</h3><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install xrdp</span><br></pre></td></tr></table></figure><p>启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start xrdp</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> xrdp</span><br></pre></td></tr></table></figure><p>之后重启：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="六、进行远程连接"><a href="#六、进行远程连接" class="headerlink" title="六、进行远程连接"></a>六、进行远程连接</h3><p>我是 Mac 系统，因此使用的是 <a href="https://apps.apple.com/cn/app/microsoft-remote-desktop/id1295203466?mt=12">Microsoft Remote Desktop</a> 进行远程连接。<br><img src="https://image.senjianlu.com/blog/2025-08-31/002619.png" alt="填写 IP 地址"><br><img src="https://image.senjianlu.com/blog/2025-08-31/002715.png" alt="输入账号密码"><br>之后还需要按照提示配置下桌面：<br><img src="https://image.senjianlu.com/blog/2025-08-31/002808.png" alt="配置桌面"><br>看一眼监控，在什么都没运行的情况下，CPU 和内存就已经占用超过一半了：<br><img src="https://image.senjianlu.com/blog/2025-08-31/003051.png" alt="2H2G 服务器资源占用"><br>后续再升级配置吧，总之算是成功了。  </p><blockquote><p>如果在后续的登陆中，出现下面的错误的话：</p><blockquote><p>Sorry, password authentication didn’t work. Please try again.</p></blockquote><p>则需要修改下 <code>/etc/pam.d/gdm-autologin</code> 和 <code>/etc/pam.d/gdm-password</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/gdm-autologin</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释掉下面这行</span></span><br><span class="line"><span class="comment"># auth requied pam_succeed_if.so user != root quiet success</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/gdm-password</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释掉下面这行</span></span><br><span class="line"><span class="comment"># auth requied pam_succeed_if.so user != root quiet success</span></span><br></pre></td></tr></table></figure></blockquote><hr><p>参考资料：</p><ul><li><a href="https://www.cnblogs.com/nhdlb/p/18094663">Linux：腾讯云轻量应用服务器搭建Ubuntu图形界面并配置远程连接</a></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;想在 Ubuntu 24.04 服务器上安装下 Steam，但是似乎需要图形化界面。&lt;br&gt;而由于一般云服务器厂商都是提供的 server 版本，因此需要安装下桌面环境。  &lt;/p&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础操作" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="Linux" scheme="https://senjianlu.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Crawl4AI 爬虫工具（一）使用 Docker Compose 部署和最小实践</title>
    <link href="https://senjianlu.com/2025/08/26/crawl4ai_01/"/>
    <id>https://senjianlu.com/2025/08/26/crawl4ai_01/</id>
    <published>2025-08-26T09:00:00.000Z</published>
    <updated>2025-08-26T09:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>正好想学习一种 <code>Selenium</code> + <code>Chrome</code> 以外的爬虫工具，作为 AI 工作流中的一个环境，就选 LLM 友好的 <code>Crawl4AI</code> 吧。  </p><span id="more"></span><hr><h2 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h2><ol><li>安装 Docker 环境</li><li>使用 docker-compose 部署容器</li><li>编写 Python3 脚本进行测试</li></ol><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="一、安装-Docker-环境"><a href="#一、安装-Docker-环境" class="headerlink" title="一、安装 Docker 环境"></a>一、安装 Docker 环境</h3><p>参考：<a href="https://senjianlu.com/2024/09/13/ubuntu2004_docker_latest/">Ubuntu 20.04 从官方源安装最新的 Docker</a></p><h3 id="二、使用-docker-dompose-部署容器"><a href="#二、使用-docker-dompose-部署容器" class="headerlink" title="二、使用 docker-dompose 部署容器"></a>二、使用 docker-dompose 部署容器</h3><blockquote><p>官方仓库：<a href="https://github.com/unclecode/crawl4ai">unclecode&#x2F;crawl4ai</a></p></blockquote><p>官方的 <a href="https://github.com/unclecode/crawl4ai/blob/main/docker-compose.yml">docker-compose.yaml</a> 文件中涉及到很多 AI 提供商的 API Key 配置，我们本次的最小实践暂时不涉及 AI 功能因此跳过。<br>最终我的文件配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">crawl4ai:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">unclecode/crawl4ai:all-amd64</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">crawl4ai</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;11235:11235&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">CRAWL4AI_API_TOKEN=YourApiToken</span></span><br></pre></td></tr></table></figure><blockquote><p>我的服务部署在公网上，不希望所有人都可以使用，因此添加 <code>CRAWL4AI_API_TOKEN</code> 来进行认证。<br>之后除了 <code>/health</code>，访问其他接口都需要提供该 Token。</p></blockquote><p>启动容器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><blockquote><p>如果出现下面的错误：</p><blockquote><p>exec &#x2F;usr&#x2F;local&#x2F;bin&#x2F;uvicorn: exec format error</p></blockquote><p>说明你的 Docker 容器镜像架构和系统的不符，<a href="https://hub.docker.com/r/unclecode/crawl4ai/tags?name=all">unclecode&#x2F;crawl4ai:all</a> 有 <code>all-arm64</code> 和 <code>all-amd64</code> 两种，需要视实际情况选择。</p></blockquote><p>启动完成后，访问 <a href="http://ip:11235/health">http://IP:11235/health</a> 测试一下：<br><img src="https://ci.senjianlu.com/file/1756203732365_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-26%20182145.png" alt="显示容器资源占用说明启动成功"></p><h3 id="三、编写-Python3-脚本进行测试"><a href="#三、编写-Python3-脚本进行测试" class="headerlink" title="三、编写 Python3 脚本进行测试"></a>三、编写 Python3 脚本进行测试</h3><p>因为我们没有在本地部署 <code>crawl4ai</code>，因此不需要安装 <code>crawl4ai</code> 的 Python 包。<br>使用 <code>requests</code> 构造响应的请求参数，之后调用 <code>crawl4ai</code> 容器的远程 API 即可实现爬取。<br>测试脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CRAWL4AI_HOST = <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">CRAWL4AI_PORT = <span class="number">11235</span></span><br><span class="line">CRAWL4AI_API_TOKEN = <span class="string">&quot;YourApiToken&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 1. 发布爬取任务</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&quot;urls&quot;</span>: [<span class="string">&quot;https://www.baidu.com&quot;</span>],</span><br><span class="line">        <span class="string">&quot;browser_config&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">&quot;crawler_config&quot;</span>: &#123;&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    url = <span class="string">&quot;&#123;&#125;://&#123;&#125;:&#123;&#125;/crawl&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;https&quot;</span> <span class="keyword">if</span> CRAWL4AI_PORT == <span class="number">443</span> <span class="keyword">else</span> <span class="string">&quot;http&quot;</span>, CRAWL4AI_HOST, CRAWL4AI_PORT)</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Authorization&quot;</span>: <span class="string">f&quot;Bearer <span class="subst">&#123;CRAWL4AI_API_TOKEN&#125;</span>&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(url, json=data, headers=headers)</span><br><span class="line">        <span class="comment"># print(response.json())</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line">    <span class="comment"># 2. 获取 Task ID</span></span><br><span class="line">    task_id = response.json()[<span class="string">&quot;task_id&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;任务 ID 为 <span class="subst">&#123;task_id&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="comment"># 3. 获取爬取结果</span></span><br><span class="line">    url = <span class="string">&quot;&#123;&#125;://&#123;&#125;:&#123;&#125;/task/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="string">&quot;https&quot;</span> <span class="keyword">if</span> CRAWL4AI_PORT == <span class="number">443</span> <span class="keyword">else</span> <span class="string">&quot;http&quot;</span>, CRAWL4AI_HOST, CRAWL4AI_PORT, task_id)</span><br><span class="line">    <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url, headers=headers)</span><br><span class="line">            <span class="keyword">if</span> response.json()[<span class="string">&quot;status&quot;</span>] <span class="keyword">in</span> [<span class="string">&quot;pending&quot;</span>, <span class="string">&quot;processing&quot;</span>]:</span><br><span class="line">                time.sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&quot;网站标题：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(response.json()[<span class="string">&quot;results&quot;</span>][<span class="number">0</span>][<span class="string">&quot;metadata&quot;</span>][<span class="string">&quot;title&quot;</span>]))</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;response.json&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                    f.write(json.dumps(response.json(), indent=<span class="number">4</span>, ensure_ascii=<span class="literal">False</span>))</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(e)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>执行结果：<br><img src="https://image.senjianlu.com/blog/2025-08-26/200930.png" alt="成功爬取百度首页"><br>结束。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;正好想学习一种 &lt;code&gt;Selenium&lt;/code&gt; + &lt;code&gt;Chrome&lt;/code&gt; 以外的爬虫工具，作为 AI 工作流中的一个环境，就选 LLM 友好的 &lt;code&gt;Crawl4AI&lt;/code&gt; 吧。  &lt;/p&gt;</summary>
    
    
    
    <category term="AI" scheme="https://senjianlu.com/categories/AI/"/>
    
    <category term="Crawl4AI" scheme="https://senjianlu.com/categories/AI/Crawl4AI/"/>
    
    
    <category term="爬虫" scheme="https://senjianlu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="Crawl4AI" scheme="https://senjianlu.com/tags/Crawl4AI/"/>
    
  </entry>
  
  <entry>
    <title>n8n AI 工作流（一）使用 Docker Compose 部署和测试</title>
    <link href="https://senjianlu.com/2025/08/25/n8n_01/"/>
    <id>https://senjianlu.com/2025/08/25/n8n_01/</id>
    <published>2025-08-25T08:00:00.000Z</published>
    <updated>2025-08-25T08:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><a href="https://steam.cash/">Steam.Cash 导航站</a>将使用 <code>n8n</code> 配置信息收集工作流。  </p><blockquote><p><a href="https://n8n.io/">n8n</a> 是一个图形化的低代码自动化流程平台，在 AI 出现之前它最初的用途是自动化你的一些日常工作流。</p></blockquote><span id="more"></span><hr><h2 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h2><ol><li>安装 Docker 环境</li><li>从官方仓库获取 <code>docker-compose.yaml</code> 文件</li><li>配置环境变量</li><li>启动容器并配置认证信息</li><li>测试工作流运行正常</li></ol><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="一、安装-Docker-环境"><a href="#一、安装-Docker-环境" class="headerlink" title="一、安装 Docker 环境"></a>一、安装 Docker 环境</h3><p>参考：<a href="https://senjianlu.com/2024/09/13/ubuntu2004_docker_latest/">Ubuntu 20.04 从官方源安装最新的 Docker</a></p><h3 id="二、从官方仓库获取-docker-compose-yaml-文件"><a href="#二、从官方仓库获取-docker-compose-yaml-文件" class="headerlink" title="二、从官方仓库获取 docker-compose.yaml 文件"></a>二、从官方仓库获取 docker-compose.yaml 文件</h3><blockquote><p>官方仓库：<a href="https://github.com/n8n-io/n8n-hosting">n8n-io&#x2F;n8n-hosting</a>  </p></blockquote><p>在服务器上下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/n8n-io/n8n-hosting.git</span><br></pre></td></tr></table></figure><p>我这里选择了 <code>withPostgres</code> 模式进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拷贝到当前的 n8n 目录中</span></span><br><span class="line"><span class="built_in">cp</span> ./n8n-hosting/docker-compose/withPostgres/* ./n8n/</span><br></pre></td></tr></table></figure><h3 id="三、编辑环境变量"><a href="#三、编辑环境变量" class="headerlink" title="三、编辑环境变量"></a>三、编辑环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> n8n</span><br><span class="line">vi .<span class="built_in">env</span></span><br></pre></td></tr></table></figure><p>只要编辑数据库连接信息即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POSTGRES_USER=postgres</span><br><span class="line">POSTGRES_PASSWORD=changeYourPassword</span><br><span class="line">POSTGRES_DB=n8n</span><br><span class="line"></span><br><span class="line">POSTGRES_NON_ROOT_USER=n8n</span><br><span class="line">POSTGRES_NON_ROOT_PASSWORD=changeYourPassword</span><br></pre></td></tr></table></figure><h3 id="四、启动容器并配置认证信息"><a href="#四、启动容器并配置认证信息" class="headerlink" title="四、启动容器并配置认证信息"></a>四、启动容器并配置认证信息</h3><p>在 <code>n8n/</code> 目录中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://ci.senjianlu.com/file/1756112242135_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20165651.png" alt="部署完成"><br>端口是 <code>5678</code>，不过访问页面 <a href="http://localhost:5678/">http://IP:5678</a> 的话会报错，因为还没有启用 SSL：<br><img src="https://ci.senjianlu.com/file/1756112447060_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20170027.png" alt="未启用 SSL 报错"></p><blockquote><p>错误信息：</p><blockquote><p>Your n8n server is configured to use a secure cookie,<br>however you are either visiting this via an insecure URL, or using Safari.</p><blockquote><p>To fix this, please consider the following options:<br>Setup TLS&#x2F;HTTPS (recommended), or<br>If you are running this locally, and not using Safari, try using localhost instead<br>If you prefer to disable this security feature (not recommended), set the environment variable N8N_SECURE_COOKIE to false</p></blockquote></blockquote></blockquote><p>我这里简单用 Cloudflare 做下反代来开启 SSL：<br><img src="https://ci.senjianlu.com/file/1756112683962_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20170352.png" alt="DNS 解析并开启小云朵"><br>选择 <code>更改端口</code>：<br><img src="https://ci.senjianlu.com/file/1756113066506_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20171001.png" alt="更改端口"><br>将（指向服务器的）目标端口改为 <code>5678</code>：<br><img src="https://ci.senjianlu.com/file/1756113064314_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20171039.png" alt="改为 5678 端口">  </p><blockquote><p>注意此时 SSL&#x2F;TLS 模式需要为灵活：<br><img src="https://ci.senjianlu.com/file/1756113534438_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20171839.png" alt="SSL&#x2F;TLS 模式"></p></blockquote><p>保存后稍等片刻再访问 <a href="https://your.domain.com/">https://your.domain.com</a> 即可：<br><img src="https://ci.senjianlu.com/file/1756113367789_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20171510.png" alt="填写认证信息"><br>填写完成后即可进入控制面板：<br><img src="https://ci.senjianlu.com/file/1756113448910_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20171710.png" alt="部署完成"></p><blockquote><p>如果你使用了 Nginx 配置 SSL 证书，请注意需要添加这两项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">proxy_set_header Connection &#x27;Upgrade&#x27;;</span><br></pre></td></tr></table></figure><p>否则在运行流程的时候会出现下面的错误：</p><blockquote><p>❌ Problem running workflow<br>Lost connection to the server</p></blockquote></blockquote><h3 id="五、测试工作流运行正常"><a href="#五、测试工作流运行正常" class="headerlink" title="五、测试工作流运行正常"></a>五、测试工作流运行正常</h3><p>选择首页的 <code>Test a simple AI Agent example</code>：<br><img src="https://ci.senjianlu.com/file/1756113631151_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20172015.png" alt="Test a simple AI Agent example"><br>按照提示输入 <code>hi</code> 之后报错了：<br><img src="https://ci.senjianlu.com/file/1756113743598_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20172207.png" alt="暂时报错">  </p><blockquote><p>错误信息：</p><blockquote><p>Error in sub-node ‘OpenAI Model’</p></blockquote><p>错误日志：</p><blockquote><p>NodeOperationError: Error in sub-node OpenAI Model at ExecuteContext.getInputConnectionData (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;n8n-core@file+packages+core_@<a href="mailto:&#111;&#x70;&#101;&#110;&#x74;&#x65;&#108;&#x65;&#x6d;&#101;&#x74;&#x72;&#121;&#43;&#x61;&#112;&#x69;&#x40;&#49;&#46;&#57;">opentelemetry+api@1.9</a>.0_@<a href="mailto:&#x6f;&#112;&#x65;&#110;&#116;&#x65;&#x6c;&#101;&#109;&#x65;&#x74;&#114;&#x79;&#43;&#115;&#100;&#x6b;&#45;&#116;&#114;&#x61;&#99;&#101;&#x2d;&#x62;&#x61;&#x73;&#101;&#x40;&#x31;&#x2e;&#51;&#48;&#95;&#48;&#x63;&#50;&#x37;&#53;&#48;&#x37;&#x30;&#x66;&#100;&#48;&#x34;&#51;&#52;&#x63;&#x30;&#x30;&#x66;&#x66;&#100;&#54;&#50;&#x32;&#49;&#x33;&#98;&#x32;&#98;&#99;&#97;&#x65;&#x34;">opentelemetry+sdk-trace-base@1.30_0c275070fd0434c00ffd62213b2bcae4</a>&#x2F;node_modules&#x2F;n8n-core&#x2F;src&#x2F;execution-engine&#x2F;node-execution-context&#x2F;utils&#x2F;get-input-connection-data.ts:302:11) at processTicksAndRejections (node:internal&#x2F;process&#x2F;task_queues:105:5) at ExecuteContext.getInputConnectionData (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;n8n-core@file+packages+core_@<a href="mailto:&#111;&#112;&#101;&#110;&#x74;&#101;&#108;&#x65;&#109;&#x65;&#x74;&#x72;&#121;&#x2b;&#97;&#x70;&#x69;&#x40;&#49;&#46;&#x39;">opentelemetry+api@1.9</a>.0_@<a href="mailto:&#x6f;&#112;&#x65;&#110;&#x74;&#x65;&#108;&#101;&#x6d;&#x65;&#x74;&#x72;&#x79;&#x2b;&#x73;&#100;&#x6b;&#45;&#x74;&#x72;&#x61;&#99;&#x65;&#x2d;&#x62;&#x61;&#x73;&#x65;&#x40;&#49;&#46;&#51;&#x30;&#95;&#x30;&#99;&#50;&#x37;&#x35;&#x30;&#55;&#x30;&#x66;&#100;&#48;&#52;&#51;&#52;&#99;&#48;&#48;&#x66;&#x66;&#100;&#54;&#x32;&#x32;&#x31;&#51;&#x62;&#x32;&#98;&#99;&#x61;&#x65;&#x34;">opentelemetry+sdk-trace-base@1.30_0c275070fd0434c00ffd62213b2bcae4</a>&#x2F;node_modules&#x2F;n8n-core&#x2F;src&#x2F;execution-engine&#x2F;node-execution-context&#x2F;execute-context.ts:203:10) at getChatModel (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;@n8n+n8n-nodes-langchain@file+packages+@n8n+nodes-langchain_944c224e2f203516e58b6afc03783333&#x2F;node_modules&#x2F;@n8n&#x2F;n8n-nodes-langchain&#x2F;nodes&#x2F;agents&#x2F;Agent&#x2F;agents&#x2F;ToolsAgent&#x2F;common.ts:269:26) at ExecuteContext.toolsAgentExecute (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;@n8n+n8n-nodes-langchain@file+packages+@n8n+nodes-langchain_944c224e2f203516e58b6afc03783333&#x2F;node_modules&#x2F;@n8n&#x2F;n8n-nodes-langchain&#x2F;nodes&#x2F;agents&#x2F;Agent&#x2F;agents&#x2F;ToolsAgent&#x2F;V1&#x2F;execute.ts:44:19) at ExecuteContext.execute (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;@n8n+n8n-nodes-langchain@file+packages+@n8n+nodes-langchain_944c224e2f203516e58b6afc03783333&#x2F;node_modules&#x2F;@n8n&#x2F;n8n-nodes-langchain&#x2F;nodes&#x2F;agents&#x2F;Agent&#x2F;V1&#x2F;AgentV1.node.ts:461:11) at WorkflowExecute.runNode (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;n8n-core@file+packages+core_@<a href="mailto:&#111;&#112;&#x65;&#110;&#x74;&#101;&#x6c;&#x65;&#x6d;&#101;&#116;&#x72;&#121;&#x2b;&#x61;&#112;&#x69;&#64;&#x31;&#x2e;&#x39;">opentelemetry+api@1.9</a>.0_@<a href="mailto:&#111;&#x70;&#101;&#110;&#x74;&#x65;&#x6c;&#x65;&#109;&#x65;&#x74;&#x72;&#121;&#43;&#115;&#100;&#x6b;&#45;&#116;&#114;&#x61;&#x63;&#x65;&#x2d;&#x62;&#x61;&#115;&#x65;&#64;&#49;&#x2e;&#51;&#48;&#x5f;&#48;&#x63;&#x32;&#55;&#x35;&#48;&#55;&#x30;&#102;&#100;&#48;&#52;&#x33;&#52;&#99;&#48;&#48;&#102;&#102;&#100;&#54;&#50;&#x32;&#x31;&#x33;&#x62;&#50;&#98;&#99;&#x61;&#101;&#52;">opentelemetry+sdk-trace-base@1.30_0c275070fd0434c00ffd62213b2bcae4</a>&#x2F;node_modules&#x2F;n8n-core&#x2F;src&#x2F;execution-engine&#x2F;workflow-execute.ts:1212:9) at &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;n8n-core@file+packages+core_@<a href="mailto:&#x6f;&#112;&#101;&#110;&#116;&#101;&#x6c;&#x65;&#x6d;&#x65;&#x74;&#x72;&#x79;&#x2b;&#x61;&#112;&#x69;&#64;&#49;&#x2e;&#x39;">opentelemetry+api@1.9</a>.0_@<a href="mailto:&#111;&#x70;&#x65;&#110;&#x74;&#101;&#x6c;&#101;&#109;&#101;&#x74;&#x72;&#121;&#x2b;&#x73;&#100;&#107;&#45;&#x74;&#x72;&#x61;&#99;&#x65;&#x2d;&#98;&#97;&#x73;&#x65;&#64;&#x31;&#x2e;&#51;&#48;&#x5f;&#x30;&#99;&#x32;&#55;&#x35;&#48;&#x37;&#48;&#x66;&#100;&#x30;&#x34;&#x33;&#x34;&#x63;&#x30;&#48;&#102;&#102;&#x64;&#54;&#x32;&#50;&#49;&#51;&#x62;&#50;&#98;&#x63;&#x61;&#101;&#x34;">opentelemetry+sdk-trace-base@1.30_0c275070fd0434c00ffd62213b2bcae4</a>&#x2F;node_modules&#x2F;n8n-core&#x2F;src&#x2F;execution-engine&#x2F;workflow-execute.ts:1582:27 at &#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;n8n&#x2F;node_modules&#x2F;.pnpm&#x2F;n8n-core@file+packages+core_@<a href="mailto:&#x6f;&#x70;&#x65;&#110;&#116;&#x65;&#x6c;&#101;&#109;&#x65;&#116;&#114;&#121;&#x2b;&#x61;&#112;&#x69;&#64;&#49;&#46;&#57;">opentelemetry+api@1.9</a>.0_@<a href="mailto:&#x6f;&#x70;&#101;&#110;&#116;&#x65;&#108;&#x65;&#x6d;&#x65;&#116;&#x72;&#121;&#x2b;&#x73;&#x64;&#107;&#45;&#116;&#x72;&#97;&#99;&#101;&#45;&#x62;&#97;&#115;&#x65;&#x40;&#49;&#46;&#51;&#48;&#95;&#x30;&#x63;&#50;&#55;&#53;&#x30;&#55;&#48;&#x66;&#x64;&#x30;&#x34;&#51;&#x34;&#99;&#x30;&#48;&#102;&#102;&#100;&#x36;&#50;&#x32;&#x31;&#x33;&#98;&#x32;&#x62;&#x63;&#x61;&#x65;&#x34;">opentelemetry+sdk-trace-base@1.30_0c275070fd0434c00ffd62213b2bcae4</a>&#x2F;node_modules&#x2F;n8n-core&#x2F;src&#x2F;execution-engine&#x2F;workflow-execute.ts:2158:11</p></blockquote></blockquote><p>这里其实是由于认证没过，需要新增认证信息，双击出错的 OpenAI Model 节点，然后点击 <code>Create new credential</code>：<br><img src="https://ci.senjianlu.com/file/1756114537148_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20173518.png" alt="新增认证信息"><br>由于 DeepSeek 兼容 OpenAI，因此这里新增使用 DeepSeek API 的认证信息即可：  </p><blockquote><p>DeepSeek 的 API 可以去官网申请，起充为 10 元，还是很便宜的：<a href="https://platform.deepseek.com/">deepseek 开放平台</a>  </p></blockquote><p><img src="https://ci.senjianlu.com/file/1756114384472_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20173249.png" alt="DeepSeek 认证信息"><br>之后选择 <code>deepseek-chat</code> 模型后保存：<br><img src="https://ci.senjianlu.com/file/1756114683720_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20173749.png" alt="选择模型">  </p><p>再次测试输入 <code>hi</code>：<br><img src="https://ci.senjianlu.com/file/1756114966447_%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-08-25%20174228.png" alt="对话框有回应"><br>获得输出：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome to n8n. Let&#x27;s start with the first step to give me memory: &quot;Click the + button on the agent that says &#x27;memory&#x27; and choose &#x27;Simple memory.&#x27; Just tell me once you&#x27;ve done that.&quot;</span><br></pre></td></tr></table></figure><p>运行成功，至此 <code>n8n</code> 的部署和测试完成。  </p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://steam.cash/&quot;&gt;Steam.Cash 导航站&lt;/a&gt;将使用 &lt;code&gt;n8n&lt;/code&gt; 配置信息收集工作流。  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://n8n.io/&quot;&gt;n8n&lt;/a&gt; 是一个图形化的低代码自动化流程平台，在 AI 出现之前它最初的用途是自动化你的一些日常工作流。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="AI" scheme="https://senjianlu.com/categories/AI/"/>
    
    <category term="n8n" scheme="https://senjianlu.com/categories/AI/n8n/"/>
    
    
    <category term="AI" scheme="https://senjianlu.com/tags/AI/"/>
    
    <category term="n8n" scheme="https://senjianlu.com/tags/n8n/"/>
    
    <category term="工作流" scheme="https://senjianlu.com/tags/%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>在 Mac 启动时自动运行脚本</title>
    <link href="https://senjianlu.com/2025/07/27/start_script_when_mac_boot/"/>
    <id>https://senjianlu.com/2025/07/27/start_script_when_mac_boot/</id>
    <published>2025-07-27T06:00:00.000Z</published>
    <updated>2025-07-27T07:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近将大量基础设置迁移到了 Mac mini 上，有些应用通过安装可以简单地设置开机自启，但是不少脚本和服务还是需要手动运行。<br>为了方便管理和使用，决定在 Mac 启动时自动运行一些脚本。</p><span id="more"></span><hr><h2 id="方案概述"><a href="#方案概述" class="headerlink" title="方案概述"></a>方案概述</h2><ol><li>建立脚本文件</li><li>修改脚本的权限</li><li>将打开方式修改为终端</li><li>添加到登录项</li></ol><hr><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="一、建立脚本文件"><a href="#一、建立脚本文件" class="headerlink" title="一、建立脚本文件"></a>一、建立脚本文件</h3><p>我这里需要启动 <a href="https://gost.run/">gost</a> 来转发端口，所以需要创建一个脚本文件 <code>start.sh</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Projects/test</span><br><span class="line">./gost -C ./gost.json</span><br></pre></td></tr></table></figure><p>于是目录结构就变为：<br><img src="https://image.senjianlu.com/blog/2025-07-27/144032.png" alt="目录结构">  </p><h3 id="二、修改脚本的权限"><a href="#二、修改脚本的权限" class="headerlink" title="二、修改脚本的权限"></a>二、修改脚本的权限</h3><p>接下来需要修改脚本的权限，使其可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 777 start.sh</span><br></pre></td></tr></table></figure><h3 id="三、将打开方式修改为终端"><a href="#三、将打开方式修改为终端" class="headerlink" title="三、将打开方式修改为终端"></a>三、将打开方式修改为终端</h3><p>右键点击脚本文件，在 <code>打开方式</code> 中选择 <code>其他</code>：<br><img src="https://image.senjianlu.com/blog/2025-07-27/144416.png" alt="选择其他"><br>在 <code>启用</code> 处选择 <code>所有应用程序</code>，然后在 <code>实用工具</code> 中选择 <code>终端</code>，勾选 <code>始终使用此应用程序打开</code>，点击 <code>打开</code>：<br><img src="https://image.senjianlu.com/blog/2025-07-27/145003.png" alt="打开终端"><br>之后尝试运行下：<br><img src="https://image.senjianlu.com/blog/2025-07-27/145300.png" alt="运行成功"></p><h3 id="四、添加到登录项"><a href="#四、添加到登录项" class="headerlink" title="四、添加到登录项"></a>四、添加到登录项</h3><p>打开 <code>系统设置</code>，点击 <code>通用</code> 并选择 <code>登录项</code>：<br><img src="https://image.senjianlu.com/blog/2025-07-27/145443.png" alt="145443"><br>点击 <code>+</code> 号，选择刚才创建的脚本文件：<br><img src="https://image.senjianlu.com/blog/2025-07-27/145528.png" alt="145528"><br>之后重启，就能看到对应的终端窗口自动打开并运行脚本了。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近将大量基础设置迁移到了 Mac mini 上，有些应用通过安装可以简单地设置开机自启，但是不少脚本和服务还是需要手动运行。&lt;br&gt;为了方便管理和使用，决定在 Mac 启动时自动运行一些脚本。&lt;/p&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="基础操作" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    
    
    <category term="GOST" scheme="https://senjianlu.com/tags/GOST/"/>
    
    <category term="macOS" scheme="https://senjianlu.com/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - AIの半導体開発やデータセンター整備など 日本企業3社が協業へ</title>
    <link href="https://senjianlu.com/2025/01/09/translate_news_nhk_20250108_k10014688341000/"/>
    <id>https://senjianlu.com/2025/01/09/translate_news_nhk_20250108_k10014688341000/</id>
    <published>2025-01-09T00:40:00.000Z</published>
    <updated>2025-01-09T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>在 AI 的半导体开发和数据中心构建等方面，日本的 3 家公司将协作</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2025-01-08 21:49</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20250108/k10014688341000.html">AIの半導体開発やデータセンター整備など 日本企業3社が協業へ</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>担う｜になう②</li><li>合意｜ごうい⓪①</li><li>海外勢｜かいがいぜい<sub><u>海外投资者。</u></sub></li></ol><hr><p>AI＝人工知能をめぐる開発が世界で加速する中、半導体メーカーの「ラピダス」など日本の企業3社が、AIの情報処理を担う半導体の開発やデータセンターの整備などで協業していくことで基本合意<sup><a href="">ごうい</a></sup>したと発表しました。</p><blockquote><p>在全球加速围绕 AI（人工智能）开发的背景下，半导体制造商 Rapidus 等三家日本企业，发布了达成协议今后在负担 AI 信息处理的半导体开发和数据中心构建方面互相协作。</p></blockquote><p>基本合意したのは、<br>▽半導体メーカーの「ラピダス」と<br>▽AI向けの半導体の設計を手がける「プリファードネットワークス」<br>それに、<br>▽データセンターなどを運営する「さくらインターネット」です。</p><blockquote><p>达成协议的是，<br>▽ 半导体的制造商 Rapidus，<br>▽ 从事 AI 方面半导体设计的 Preferred Networks，<br>▽ 运营数据中心的樱花网络。</p></blockquote><p>3社は、AIの情報処理を担う半導体の設計や製造、それにデータセンターの整備などで協業していくとしています。</p><blockquote><p>三家公司决定在负担 AI 信息处理的半导体开发和数据中心构建方面互相协作。</p></blockquote><p>AI＝人工知能の普及に伴って、半導体やデータセンターの需要が拡大する一方、国際情勢の変化に伴う半導体の供給リスクや電力不足の懸念が高まっています。</p><blockquote><p>随着 AI 的普及，一方面对半导体和数据中心的需求扩大，另一方面随着国际形式的变化，半导体供应的风险和对电力不足的担忧也在增长。</p></blockquote><p>3社は、高い情報処理能力を持つ半導体の開発や、省電力のデータセンターの整備など、各社の強みを生かして協業するとしています。</p><blockquote><p>三家公司决定在开发拥有高性能的半导体和构建省电的数据中心方面，发挥各自的优势通力合作。</p></blockquote><p>AIビジネスを支える半導体やデータセンターは、アメリカを中心に海外勢が先行していて、今回の協業が日本の競争力強化につながるか注目されます。</p><blockquote><p>支撑 AI 业务的半导体和数据中心，一直都是以美国为中心，国外走在先列，本次的协作广泛被视作将为日本带来竞争力的增强。</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;在 AI 的半导体开发和数据中心构建等方面，日本的 3 家公司将协作&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - 次世代の車の競争でカギ握るソフトウエア開発が本格化</title>
    <link href="https://senjianlu.com/2025/01/06/translate_news_nhk_20250106_k10014685511000/"/>
    <id>https://senjianlu.com/2025/01/06/translate_news_nhk_20250106_k10014685511000/</id>
    <published>2025-01-06T00:40:00.000Z</published>
    <updated>2025-01-06T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>作为次世代汽车竞争关键的软件开发被规范化</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2025-01-06 07:46</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20250106/k10014685511000.html">次世代の車の競争でカギ握るソフトウエア開発が本格化</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>握る｜にぎる⓪</li><li>本格化｜ほんかくか⓪<sub><u>规范化。</u></sub></li><li>燃費｜ねんぴ⓪①</li><li>エンターテインメント｜えんたーていんめんと⑤<sub><u>(entertainment) 娱乐，演艺，余兴。</u></sub></li><li>搭載｜とうさい⓪</li><li>カーナビ｜かーなび⓪<sub><u>(carnavigation) 汽车导航（系统）。</u></sub></li></ol><hr><p>次世代の車の競争でカギを握る<sup><a href="">にぎる</a></sup>とされる、車の性能をアップデートできるソフトウエアの開発が日本の自動車メーカーの間で本格化しています。</p><blockquote><p>被当作次世代的汽车竞争关键的、能够提升车辆性能的软件开发，正在被日本的汽车制造商们规范化。</p></blockquote><p>車を購入したあともソフトウエアを更新することで、燃費<sup><a href="">ねんぴ</a></sup>性能や安全機能などを高められる「SDV」＝ソフトウエア・デファインド・ビークルは、次世代の車の競争でカギを握るとされています。</p><blockquote><p>在车辆购入之后，通过更新软件，提升燃料性能和安全功能的 SDV 被作为次世代汽车竞争的关键。</p></blockquote><p>この分野ではアメリカのテスラや中国の新興<sup><a href="">しんこう</a></sup>メーカーなどが先行し、自動運転から車内のエンターテインメントまで幅広い分野で実用化が始まっています。</p><blockquote><p>在这个领域，美国的特斯拉和中国的新兴制造商率先开始从自动驾驶到娱乐设备、实用化多个领域。</p></blockquote><p>こうした動きに対抗するため、日本メーカーも開発を本格化させていて、トヨタ自動車はことし、車載用の基本ソフトを世界で展開する車に搭載<sup><a href="">とうさい</a></sup>する計画です。</p><blockquote><p>为了对抗这种行为，日本制造商也将开发正式化，丰田汽车将于今年在世界范围内为车辆搭载基本的车载软件。</p></blockquote><p>この基本ソフトはさまざまな機能を追加できるのが特徴で、まずは生成AIとカーナビを連動させた道案内の機能を導入することにしています。</p><blockquote><p>这个基本的软件拥有能够追加各种各样能力的特征，并且首先决定引入使生成式 AI 和汽车导航联动的指路功能。</p></blockquote><p>また経営統合に向けて本格的な協議に入ったホンダと日産自動車は、ソフトウエアの分野で研究開発機能を一体化して開発力を高めるほか、ホンダは来年から世界で展開する電気自動車に自社開発の基本ソフトを搭載する計画です。</p><blockquote><p>还有为了统合经营二引入规范协议的本田和日产汽车，除了将研究开发功能一体化来提高开发能力，本田还计划从明年开始在射界范围内为电车搭载自己公司研发的基本软件。</p></blockquote><p>このほかスズキも、資本提携を結ぶトヨタやスタートアップ企業とも連携して開発を進めています。</p><blockquote><p>并且铃木也与有资本提携的丰田和创业公司联动（来）推进开发。</p></blockquote><p>ただ、ソフトウエアの開発には巨額の投資が必要なうえ、収益を確保するためにも、より多くの車に搭載する必要があることから、異業種の参入も含めて自動車メーカーの間で競争が激しくなっています。</p><blockquote><p>然后，由于软件的开发需要巨额的投资，为了确保收益，需要在尽量多的汽车商搭载软件，由于有其他行业的参与，汽车制造商之间的竞争也在变得激烈。</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作为次世代汽车竞争关键的软件开发被规范化&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>SAP 考试重点 - 认证</title>
    <link href="https://senjianlu.com/2025/01/03/sap_important_identity/"/>
    <id>https://senjianlu.com/2025/01/03/sap_important_identity/</id>
    <published>2025-01-03T04:00:00.000Z</published>
    <updated>2025-01-03T04:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>涉及 <code>Active Directory</code>、<code>IAM</code> 和跨账户授权等 AWS 认证的内容。<br>主要用于 <code>SAP-C02</code> 相关题目的关联和背诵使用。  </p></blockquote><span id="more"></span><hr><div class="custom_mindmap_class" style="width: 100%"><blockquote class="pullquote mindmap mindmap-md"><ul><li>AWS 认证（SAP-C02 考试内容）<ul><li>Active Directory</li></ul></li></ul></blockquote></div><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;涉及 &lt;code&gt;Active Directory&lt;/code&gt;、&lt;code&gt;IAM&lt;/code&gt; 和跨账户授权等 AWS 认证的内容。&lt;br&gt;主要用于 &lt;code&gt;SAP-C02&lt;/code&gt; 相关题目的关联和背诵使用。  &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="备考" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%A4%87%E8%80%83/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="每日练习" scheme="https://senjianlu.com/tags/%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>SAP 考试每日练习 - 2025/01/02</title>
    <link href="https://senjianlu.com/2025/01/02/sap_test_daily_20250102/"/>
    <id>https://senjianlu.com/2025/01/02/sap_test_daily_20250102/</id>
    <published>2025-01-02T12:00:00.000Z</published>
    <updated>2025-01-02T15:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>来源：<a href="https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/">Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam</a><br>10 题 (No.18 ~ No.27)，仅供自己复习使用。<br>如果侵权请联系删除。</p></blockquote><span id="more"></span><hr><h3 id="一、Video-categorization-application"><a href="#一、Video-categorization-application" class="headerlink" title="一、Video categorization application"></a>一、Video categorization application</h3><p>A company has a web application that allows users to upload short videos. The videos are stored on Amazon EBS volumes and analyzed by custom recognition software for categorization.<br>The website contains static content that has variable traffic with peaks in certain months. The architecture consists of Amazon EC2 instances running in an Auto Scaling group for the web application and EC2 instances running in an Auto Scaling group to process an Amazon SQS queue. The company wants to re-architect the application to reduce operational overhead using AWS managed services where possible and remove dependencies on third-party software.<br>Which solution meets these requirements?</p><ol><li>❌ Use Amazon ECS containers for the web application and Spot instances for the Auto Scaling group that processes the SQS queue. Replace the custom software with Amazon Rekognition to categorize the videos.</li><li>Store the uploaded videos in Amazon EFS and mount the file system to the EC2 instances for the web application. Process the SQS queue with an AWS Lambda function that calls the Amazon Rekognition API to categorize the videos.</li><li>✅ Host the web application in Amazon S3. Store the uploaded videos in Amazon S3. Use S3 event notification to publish events to the SQS queue. Process the SQS queue with an AWS Lambda function that calls the Amazon Rekognition API to categorize the videos.</li><li>Use AWS Elastic Beanstalk to launch EC2 instances in an Auto Scaling group for the web application and launch a worker environment to process the SQS queue. Replace the custom software with Amazon Rekognition to categorize the videos.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ ❌ -&gt; 3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：这里的问题在于 Web 应用程序是否是全静态的，如果是全静态的话无疑 3️⃣ 就是最佳选择：使用的技术栈都是 AWS 托管的。  </p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：This solution meets the requirements by using multiple managed services offered by AWS which can reduce the operational overhead. Hosting the web application in Amazon S3 would make it highlyavailable, scalable and can handle variable traffic.<br>The uploaded videos can be stored in S3 and processed using S3 event notifications that trigger a Lambda function, which calls the Amazon Rekognition API to categorize the videos.SQS can be used to process the event notificationsand also it is a managed service.<br>This solution eliminates the need to manage EC2 instances, EBS volumesand the custom software. Additionally, using Lambda function in this case,eliminates the need for managing additional servers to process the SQS queue which will reduce operational overhead.<br>By using this solution, the company can benefit from the scalability, reliability,and cost-effectiveness that these services offer, which can help to reduce operational overhead and improve the overall performance and security of the application.</p></blockquote><hr><h3 id="二、Serverless-Application-Deploy"><a href="#二、Serverless-Application-Deploy" class="headerlink" title="二、Serverless Application Deploy"></a>二、Serverless Application Deploy</h3><p>A company has a serverless application comprised of Amazon CloudFront, Amazon API Gateway, and AWS Lambda functions.<br>The current deployment process of the application code is to create a new version number of the Lambda function and run an AWS CLI script to update. If the new function version has errors, another CLI script reverts by deploying the previous working version of the function. The company would like to decrease the time to deploy new versions of the application logic provided by the Lambda functions, and also reduce the time to detect and revert when errors are identified.<br>How can this be accomplished?</p><ol><li>Create and deploy nested AWS CloudFormation stacks with the parent stack consisting of the AWS CloudFront distribution and API Gateway, and the child stack containing the Lambda function. For changes to Lambda, create an AWS CloudFormation change set and deploy; if errors are triggered, revert the AWS CloudFormation change set to the previous version.</li><li>✅ Use AWS SAM and built-in AWS CodeDeploy to deploy the new Lambda version, gradually shift traffic to the new version, and use pre-traffic and post-traffic test functions to verify code. Rollback if Amazon CloudWatch alarms are triggered.</li><li>Refactor the AWS CLI scripts into a single script that deploys the new Lambda version. When deployment is completed, the script tests execute. If errors are detected, revert to the previous Lambda version.</li><li>Create and deploy an AWS CloudFormation stack that consists of a new API Gateway endpoint that references the new Lambda version. Change the CloudFront origin to the new API Gateway endpoint, monitor errors and if detected, change the AWS CloudFront origin to the previous API Gateway endpoint.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>2️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<code>Lambda</code> 的多版本部署问题。<br><a href="https://docs.aws.amazon.com/zh_cn/serverless-application-model/latest/developerguide/automating-updates-to-serverless-apps.html">使用 AWS SAM 逐步部署无服务器应用程序</a>  </p><blockquote><p>AWS Serverless Application Model (AWS SAM) 内置于 CodeDeploy 中，可提供逐步 AWS Lambda 部署。只需几行配置，AWS SAM 即可为您完成以下操作：</p><ul><li>部署 Lambda 函数的新版本，并自动创建指向新版本的别名。</li><li>逐步将客户流量转移到新版本，直到您确认它按预期方式运行。如果更新无法正常运行，则可以回滚更改。</li><li>定义转移流量前和转移流量后的测试函数，来验证新部署的代码是否已正确配置并且您的应用程序是否按预期方式运行。</li><li>如果触发了 CloudWatch 警报，则会自动回滚部署。</li></ul></blockquote><p>这里需要注意的是，<code>SAM</code> 内置了 <code>CodeDeploy</code>，并且它的架构是这样的：</p><blockquote><p><img src="https://image.senjianlu.com/blog/2024-12-06/aws_ops_sam_cicd.png" alt="SAM 的 CI&#x2F;CD 架构"></p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：AWS Serverless Application Model (SAM) is a frameworkthat helps you build, test and deploy your serverlessapplications. It uses CloudFormation under the hood, so it isa way to simplify the process of creating, updating,and deploying CloudFormation templates. CodeDeploy isa service that automates code deployments to any instance, including on-premises instancesand Lambda functions.<br>With AWS SAM you can use the built-in CodeDeploy to deploy new versions of the Lambda function, gradually shift traffic to the new version,and use pre-traffic and post-traffic test functions to verify code.<br>You can also define CloudWatch Alarms to trigger a rollbackin case of any issues.<br>Thisallows for a faster and more efficient deployment process,as well asa more reliable rollback process when errorsare identified.This way you can increase the speed of deployment and reduce the time to detect and revert when errorsare identified.</p></blockquote><hr><h3 id="三、Glacier-Deep-Archive"><a href="#三、Glacier-Deep-Archive" class="headerlink" title="三、Glacier Deep Archive"></a>三、Glacier Deep Archive</h3><p>A company is planning to store a large number of archived documents and make the documents available to employees through the corporate intranet. Employees will access the system by connecting through a client VPN service that is attached to a VPC. The data must not be accessible to the public.<br>The documents that the company is storing are copies of data that is held on physical media elsewhere. The number of requests will be low. Availability and speed of retrieval are not concerns of the company.<br>Which solution will meet these requirements at the LOWEST cost?</p><ol><li>✅ Create an Amazon S3 bucket. Configure the S3 bucket to use the S3 One Zone-Infrequent Access (S3 One Zone-IA) storage class as default. Configure the S3 bucket for website hosting. Create an S3 interface endpoint. Configure the S3 bucket to allow access only through that endpoint.</li><li>Launch an Amazon EC2 instance that runs a web server. Attach an Amazon ElasticFile System (Amazon EFS) file system to store the archived data in the EFS One Zone-Infrequent Access (EFS One Zone-IA) storage class Configure the instance security groups to allow access only from private networks.</li><li>Launch an Amazon EC2 instance that runs a web server Attach an Amazon Elastic Block Store (Amazon EBS) volume to store the archived data. Use the Cold HDD (sc1) volume type. Configure the instance security groups to allow access only from private networks.</li><li>❌ Create an Amazon S3 bucket. Configure the S3 bucket to use the S3 Glacier Deep Archive storage class as default. Configure the S3 bucket for website hosting. Create an S3 interface endpoint. Configure the S3 bucket to allow access only through that endpoint.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ❌ -&gt; 1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：这里社区存在整体，4️⃣ 的深度归档显然更便宜，但是它存在检索时间超过 12 的问题，如果使用它托管网页并请求下载的话，一定会出现超时问题，因此 4️⃣ 并不是很好。<br>而题目中强调了这些数据只是备份，因此可以使用单区存储，显然 1️⃣ 贴合了考点。  </p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A - Glacier Deep Archive can’t be used for web hosting, regardless if the company says retrieval time is no concern.</p></blockquote><hr><h3 id="四、AWS-AD"><a href="#四、AWS-AD" class="headerlink" title="四、AWS AD"></a>四、AWS AD</h3><p>A company is using an on-premises Active Directory service for user authentication. The company wants to use the same authentication service to sign in to the company’s AWS accounts, which are using AWS Organizations. AWS Site-to-Site VPN connectivity already exists between the on-premises environment and all the company’s AWS accounts.<br>The company’s security policy requires conditional access to the accounts based on user groups and roles. User identities must be managed in a single location.<br>Which solution will meet these requirements?</p><ol><li>✅ Configure AWS IAM Identity Center (AWS Single Sign-On) to connect to Active Directory by using SAML 2.0. Enable automatic provisioning by using the System for Cross-domain Identity Management (SCIM) v2.0 protocol. Grant access to the AWS accounts by using attribute-based access controls (ABACs).</li><li>Configure AWS IAM Identity Center (AWS Single Sign-On) by using IAM Identity Center as an identity source. Enable automatic provisioning by using the System for Cross-domain Identity Management (SCIM) v2.0 protocol. Grant access to the AWS accounts by using IAM Identity Center permission sets.</li><li>In one of the company’s AWS accounts, configure AWS Identity and Access Management (IAM) to use a SAML 2.0 identity provider. Provision IAM users that are mapped to the federated users. Grant access that corresponds to appropriate groups in Active Directory. Grant access to the required AWS accounts by using cross-account IAM users.</li><li>In one of the company’s AWS accounts, configure AWS Identity and Access Management (IAM) to use an OpenID Connect (OIDC) identity provider. Provision IAM roles that grant access to the AWS account for the federated users that correspond to appropriate groups in Active Directory. Grant access to the required AWS accounts by using cross-account IAM roles.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：本地有 <code>AD</code>，已经架设了 <code>Site-to-Site VPN</code>，希望用户凭证在单区进行管理。  </p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：Both option C and option A are valid solutions that meet the requirements for the scenario.<br>ABAC, or attribute-based access control, isa method of granting access to resources based on the attributes of the user, the resource,and the action.Thisallows for fine-grained access control, which can be useful for implementing a security policy that requires conditional access to the accounts based on user groupsand roles.<br>AWS IAM Identity Center (AWS SSO) allows you to connect to your on-premises Active Directory service using SAML 2.0. With<br>this, you can enable automatic provisioning by using the System for Cross-domain Identity Management (SCIM) v2.0 protocol,<br>which allows for the management of user identities in a single location.</p></blockquote><hr><h3 id="五、API-throttling"><a href="#五、API-throttling" class="headerlink" title="五、API throttling"></a>五、API throttling</h3><p>A software company has deployed an application that consumes a REST API by using Amazon API Gateway, AWS Lambda functions, and an Amazon DynamoDB table. The application is showing an increase in the number of errors during PUT requests. Most of the PUT calls come from a small number of clients that are authenticated with specific API keys.<br>A solutions architect has identified that a large number of the PUT requests originate from one client. The API is noncritical, and clients can tolerate retries of unsuccessful calls. However, the errors are displayed to customers and are causing damage to the API’s reputation.<br>What should the solutions architect recommend to improve the customer experience?</p><ol><li>Implement retry logic with exponential backoff and irregular variation in the client application. Ensure that the errors are caught and handled with descriptive error messages.  </li><li>✅ Implement API throttling through a usage plan at the API Gateway level. Ensure that the client application handles code 429 replies without error.</li><li>Turn on API caching to enhance responsiveness for the production stage. Run 10-minute load tests. Verify that the cache capacity is appropriate for the workload.</li><li>Implement reserved concurrency at the Lambda function level to provide the resources that are needed during sudden increases in traffic.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>2️⃣ ✅</p></blockquote><blockquote><p>💡 解析：问题的本质是来自单一客户端的大量请求导致出现大量错误，节流进行控制非常合理。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：API throttling isa technique that can be used to control the rate of requests to an API.This can be useful in situations where a small number of clientsare making a large number of requests, which is causing errors. By implementing API throttling through a usage plan at the API Gateway level, the solutionsarchitect can limit the number of requests that a client can make, which will help to reduce the number of errors.<br>It’s important that the client application handles the code 429 replies without error, this will help to improve the customer experience by reducing the number of errors that are displayed to customers. Additionally, it will prevent the API’s reputation from being damaged by the errors.</p></blockquote><hr><h3 id="六、S3-lazy-loading"><a href="#六、S3-lazy-loading" class="headerlink" title="六、S3 lazy loading"></a>六、S3 lazy loading</h3><p>A company is running a data-intensive application on AWS. The application runs on a cluster of hundreds of Amazon EC2 instances. A shared file system also runs on several EC2 instances that store 200 TB of data. The application reads and modifies the data on the shared file system and generates a report. The job runs once monthly, reads a subset of the files from the shared file system, and takes about 72 hours to complete. The compute instances scale in an Auto Scaling group, but the instances that host the shared file system run continuously. The compute and storage instances are all in the same AWS Region.<br>A solutions architect needs to reduce costs by replacing the shared file system instances. The file system must provide high performance access to the needed data for the duration of the 72-hour run.<br>Which solution will provide the LARGEST overall cost reduction while meeting these requirements?</p><ol><li>✅ Migrate the data from the existing shared file system to an Amazon S3 bucket that uses the S3 Intelligent-Tiering storage class. Before the job runs each month, use Amazon FSx for Lustre to create a new file system with the data from Amazon S3 by using lazy loading. Use the new file system as the shared storage for the duration of the job. Delete the file system when the job is complete.</li><li>Migrate the data from the existing shared file system to a large Amazon Elastic Block Store (Amazon EBS) volume with Multi-Attach enabled. Attach the EBS volume to each of the instances by using a user data script in the Auto Scaling group launch template. Use the EBS volume as the shared storage for the duration of the job. Detach the EBS volume when the job is complete</li><li>❌ Migrate the data from the existing shared file system to an Amazon S3 bucket that uses the S3 Standard storage class. Before the job runs each month, use Amazon FSx for Lustre to create a new file system with the data from Amazon S3 by using batch loading. Use the new file system as the shared storage for the duration of the job. Delete the file system when the job is complete.</li><li>Migrate the data from the existing shared file system to an Amazon S3 bucket. Before the job runs each month, use AWS Storage Gateway to create a file gateway with the data from Amazon S3. Use the file gateway as the shared storage for the job. Delete the file gateway when the job is complete.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>3️⃣ ❌ -&gt; 1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/zh_cn/fsx/latest/FileCacheGuide/mdll-lazy-load.html">Lazy load</a></p><blockquote><p>当您使用缓存访问链接的 Amazon S3 或 NFS 数据存储库中的数据时，Amazon File Cache 会自动加载元数据（名称、所有权、时间戳和权限）和文件内容（如果缓存中还没有这些内容）。数据存储库中的数据会以文件和目录的形式出现在缓存中。<br>当您在 DRA 目录中读取或写入文件数据或元数据时，会触发懒加载。如果数据尚未可用，Amazon File Cache 会将数据从链接的数据存储库加载到缓存中。例如，当您打开文件、统计文件或对文件进行元数据更新时，就会触发懒加载。</p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A: Lazy loading is cost-effective because onlya subset of data is used at every job<br>B:There are hundreds of EC2 instances using the volume which is not possible (one EBS volume is limited to 16 nitro instances attached)<br>C: Batching would load too much data<br>D: storage gateway is used for on premises data access, I don’t know is you can install a gateway in AWS, but Amazon would never advise this</p></blockquote><hr><h3 id="七、Assign-Elastic-IP-addresses-to-the-NLB"><a href="#七、Assign-Elastic-IP-addresses-to-the-NLB" class="headerlink" title="七、Assign Elastic IP addresses to the NLB"></a>七、Assign Elastic IP addresses to the NLB</h3><p>A company is developing a new service that will be accessed using TCP on a static port. A solutions architect must ensure that the service is highly available, has redundancy across Availability Zones, and is accessible using the DNS name my.service.com, which is publicly accessible. The service must use fixed address assignments so other companies can add the addresses to their allow lists.<br>Assuming that resources are deployed in multiple Availability Zones in a single Region, which solution will meet these requirements?  </p><ol><li>Create Amazon EC2 instances with an Elastic IP address for each instance. Create a Network Load Balancer (NLB) and expose the static TCP port. Register EC2 instances with the NLB. Create a new name server record set named my.service.com, and assign the Elastic IP addresses of the EC2 instances to the record set. Provide the Elastic IP addresses of the EC2 instances to the other companies to add to their allow lists.</li><li>Create an Amazon ECS cluster and a service definition for the application. Create and assign public IP addresses for the ECS cluster. Create a Network Load Balancer (NLB) and expose the TCP port. Create a target group and assign the ECS cluster name to the NLCreate a new A record set named my.service.com, and assign the public IP addresses of the ECS cluster to the record set. Provide the public IP addresses of the ECS cluster to the other companies to add to their allow lists.</li><li>✅ Create Amazon EC2 instances for the service. Create one Elastic IP address for each Availability Zone. Create a Network Load Balancer (NLB) and expose the assigned TCP port. Assign the Elastic IP addresses to the NLB for each Availability Zone. Create a target group and register the EC2 instances with the NLB. Create a new A (alias) record set named my.service.com, and assign the NLB DNS name to the record set.</li><li>Create an Amazon ECS cluster and a service definition for the application. Create and assign public IP address for each host in the cluster. Create an Application Load Balancer (ALB) and expose the static TCP port. Create a target group and assign the ECS service definition name to the ALB. Create a new CNAME record set and associate the public IP addresses to the record set. Provide the Elastic IP addresses of the Amazon EC2 instances to the other companies to add to their allow lists.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://repost.aws/zh-Hans/questions/QUW3TfCzaNQJuVWFNrvRZIsg/alb%E4%B8%8Enlb%E8%83%BD%E5%90%A6%E7%BB%91%E5%AE%9A%E5%BC%B9%E6%80%A7ip">ALB 与 NLB 能否绑定弹性 IP</a></p><blockquote><p>ALB不支持绑定EIP，ALB是会根据业务负载进行扩展的， NLB可以绑定EIP。 解决方式是：</p><ol><li>将解析托管到 R53，R53 可以将顶级域名解析到 ALB（<code>ALIAS</code> 记录）</li><li>在 Network Load Balancer (NLB) 的目标组中配置 ALB 作为其目标，然后将 EIP 分配给 NLB。</li><li>使用 NLB, 替换 ALB。</li></ol></blockquote><p>需要注意的是 <code>ALB</code> 不支持绑定弹性 IP。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：Logical answer : Non http port like TCP should hint to NLB immediately.(ALB does not fit here) Sharing IP address of EC2 is not apt<br>whether it is from individual EC2 instances or those from ECS cluster.thiseliminates A,B.D, infact the NLB’saddress which stays in front of &#x2F; associates to ec2 instances need to be shared.So, only solution is C</p></blockquote><hr><h3 id="八、SLA"><a href="#八、SLA" class="headerlink" title="八、SLA"></a>八、SLA</h3><p>A company uses an on-premises data analytics platform. The system is highly available in a fully redundant configuration across 12 servers in the company’s data center.<br>The system runs scheduled jobs, both hourly and daily, in addition to one-time requests from users. Scheduled jobs can take between 20 minutes and 2 hours to finish running and have tight SLAs. The scheduled jobs account for 65% of the system usage. User jobs typically finish running in less than 5 minutes and have no SLA. The user jobs account for 35% of system usage. During system failures, scheduled jobs must continue to meet SLAs. However, user jobs can be delayed.<br>A solutions architect needs to move the system to Amazon EC2 instances and adopt a consumption-based model to reduce costs with no long-term commitments. The solution must maintain high availability and must not affect the SLAs.<br>Which solution will meet these requirements MOST cost-effectively?</p><ol><li>Split the 12 instances across two Availability Zones in the chosen AWS Region. Run two instances in each Availability Zone as On-Demand Instances with Capacity Reservations. Run four instances in each Availability Zone as Spot Instances.</li><li>Split the 12 instances across three Availability Zones in the chosen AWS Region. In one of the Availability Zones, run all four instances as On-Demand Instances with Capacity Reservations. Run the remaining instances as Spot Instances.</li><li>Split the 12 instances across three Availability Zones in the chosen AWS Region. Run two instances in each Availability Zone as On-Demand Instances with a Savings Plan. Run two instances in each Availability Zone as Spot Instances.</li><li>✅ Split the 12 instances across three Availability Zones in the chosen AWS Region. Run three instances in each Availability Zone as On-Demand Instances with Capacity Reservations. Run one instance in each Availability Zone as a Spot Instance.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ✅</p></blockquote><blockquote><p>💡 解析：公司不想做长期保证因此不选 3️⃣。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：Voted D because of the 65% &#x2F; 35% proportion. C seems to be good but with only 50% instancesavailable we breakthe SLA</p></blockquote><hr><h3 id="九、AWS-Secrets-Manager-RotationSchedule"><a href="#九、AWS-Secrets-Manager-RotationSchedule" class="headerlink" title="九、AWS Secrets Manager RotationSchedule"></a>九、AWS Secrets Manager RotationSchedule</h3><p>A security engineer determined that an existing application retrieves credentials to an Amazon RDS for MySQL database from an encrypted file in Amazon S3. For the next version of the application, the security engineer wants to implement the following application design changes to improve security:<br>The database must use strong, randomly generated passwords stored in a secure AWS managed service.<br>The application resources must be deployed through AWS CloudFormation.<br>The application must rotate credentials for the database every 90 days.<br>A solutions architect will generate a CloudFormation template to deploy the application.<br>Which resources specified in the CloudFormation template will meet the security engineer’s requirements with the LEAST amount of operational overhead?</p><ol><li>✅ Generate the database password as a secret resource using AWS Secrets Manager. Create an AWS Lambda function resource to rotate the database password. Specify a Secrets Manager RotationSchedule resource to rotate the database password every 90 days.</li><li>Generate the database password as a SecureString parameter type using AWS Systems Manager Parameter Store. Create an AWS Lambda function resource to rotate the database password. Specify a Parameter Store RotationSchedule resource to rotate the database password every 90 days.</li><li>Generate the database password as a secret resource using AWS Secrets Manager. Create an AWS Lambda function resource to rotate the database password. Create an Amazon EventBridge scheduled rule resource to trigger the Lambda function password rotation every 90 days.</li><li>Generate the database password as a SecureString parameter type using AWS Systems Manager Parameter Store. Specify an AWS AppSync DataSource resource to automatically rotate the database password every 90 days.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/zh_cn/AWSCloudFormation/latest/UserGuide/aws-resource-secretsmanager-rotationschedule.html">AWS::SecretsManager::RotationSchedule</a></p><blockquote><p>设置密文的旋转时间表和 Lambda 轮转函数。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Type&quot;</span> <span class="punctuation">:</span> <span class="string">&quot;AWS::SecretsManager::RotationSchedule&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Properties&quot;</span> <span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;HostedRotationLambda&quot;</span> <span class="punctuation">:</span> HostedRotationLambda<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;RotateImmediatelyOnUpdate&quot;</span> <span class="punctuation">:</span> Boolean<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;RotationLambdaARN&quot;</span> <span class="punctuation">:</span> String<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;RotationRules&quot;</span> <span class="punctuation">:</span> RotationRules<span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;SecretId&quot;</span> <span class="punctuation">:</span> String</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A<br><a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/cloudformation.html">https://docs.aws.amazon.com/secretsmanager/latest/userguide/cloudformation.html</a><br>Option B is wrong.The ParameterStore::RotationSchedule resource does not exist in CloudFormation.<br>Option C is wrong. It does not meet the requirement because it does not use CloudFormation.<br>Option D is wrong.The AWS::AppSync::DataSource resource is what to create data sources for resolvers in AWS AppSync to connect to.</p></blockquote><hr><h3 id="十、API-Gateway-REST-API-direct-integrations"><a href="#十、API-Gateway-REST-API-direct-integrations" class="headerlink" title="十、API Gateway REST API direct integrations"></a>十、API Gateway REST API direct integrations</h3><p>A company is storing data in several Amazon DynamoDB tables. A solutions architect must use a serverless architecture to make the data accessible publicly through a simple API over HTTPS. The solution must scale automatically in response to demand.<br>Which solutions meet these requirements? (Choose two.)</p><ol><li>✅ Create an Amazon API Gateway REST API. Configure this API with direct integrations to DynamoDB by using API Gateway’s AWS integration type.</li><li>Create an Amazon API Gateway HTTP API. Configure this API with direct integrations to Dynamo DB by using API Gateway’s AWS integration type.</li><li>✅ Create an Amazon API Gateway HTTP API. Configure this API with integrations to AWS Lambda functions that return data from the DynamoDB tables.</li><li>Create an accelerator in AWS Global Accelerator. Configure this accelerator with AWS Lambda@Edge function integrations that return data from the DynamoDB tables.</li><li>Create a Network Load Balancer. Configure listener rules to forward requests to the appropriate AWS Lambda functions.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ 3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：AWS 介绍了使用 REST API 操作 <code>DynamoDB</code> 的案例：<a href="https://docs.aws.amazon.com/zh_cn/apigateway/latest/developerguide/api-gateway-overview-developer-experience.html">API Gateway 使用案例</a></p><blockquote><p><strong>使用 API Gateway 创建 REST API</strong><br>例如，使用 DynamoDB 作为后端，API 开发人员会设置集成请求以便将传入方法请求转发到所选的后端。该设置包括适当 DynamoDB 操作的规范、所需的 IAM 角色和策略以及所需的输入数据转换。后端将结果作为集成响应返回到 API Gateway。</p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A and C.<br>API Gateway REST API can invoke DynamoDB directly.<br><a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-overview-developer-experience.html">https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-overview-developer-experience.html</a></p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/&quot;&gt;Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam&lt;/a&gt;&lt;br&gt;10 题 (No.18 ~ No.27)，仅供自己复习使用。&lt;br&gt;如果侵权请联系删除。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="备考" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%A4%87%E8%80%83/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="每日练习" scheme="https://senjianlu.com/tags/%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - 学校給食費の全国での無償化 通常国会でも論点に</title>
    <link href="https://senjianlu.com/2024/12/30/translate_news_nhk_20241230_k10014682481000/"/>
    <id>https://senjianlu.com/2024/12/30/translate_news_nhk_20241230_k10014682481000/</id>
    <published>2024-12-30T00:40:00.000Z</published>
    <updated>2024-12-30T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>无偿化全国范围内的学校伙食费，将在通常国会上成为争论焦点</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2024-12-30 04:11</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20241230/k10014682481000.html">学校給食費の全国での無償化 通常国会でも論点に</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>恩恵｜おんけい⓪</li><li>速やか｜すみやか②</li><li>子育｜こそだて⓪</li><li>一律｜いちりつ⓪</li><li>困窮｜こんきゅう⓪</li><li>乏しい｜とぼしい③<sub><u>1. 缺乏，不足，缺少；2. 贫穷，贫乏，贫困。</u></sub></li><li>財源｜ざいげん⓪③</li><li>維新｜いしん①</li></ol><hr><p>学校給食費の全国での無償化について、政府は、<u>給食を提供していない学校の子どもに恩恵<sup><a href="">おんけい</a></sup>が及ばないなど</u>課題は少なくないとして、丁寧に検討を進める方針です。一方、立憲民主党などは速やか<sup><a href="">すみやか</a></sup>な実施を主張していて、2025年の通常国会<sup><a href="">こっかい</a></sup>でも論点となりそうです。</p><blockquote><p>就对全国范围的学校伙食费进行无偿化的事情，政府由于<u>无法将恩惠波及到不提供伙食的学校等</u>不少问题，（认为）需要进一步仔细检讨。另一方面，立宪民主党等则主张尽快实施，似乎将在 2025 年的通常国会上作为争论焦点。  </p></blockquote><p>学校給食費をめぐり、文部科学省は、<u>子育て<sup><a href="">こそだて</a></sup>支援や格差対策などの観点から全国での無償化を求める声があるの</u>を踏まえ、課題を整理しました。</p><blockquote><p>围绕学校伙食费，文部科学省基于<u>由于支援孩子养育和价差对策等原因而来自全国的对无偿化的诉求</u>，整理了问题。</p></blockquote><p>この中では、<br>▽給食を提供していない学校に通うケースを含め、給食を食べていない児童<sup><a href="">じどう</a></sup>・生徒がおよそ61万人いて、一律<sup><a href="">いちりつ</a></sup>に無償化しても、すべての人に恩恵が及ばないと指摘しています。</p><blockquote><p>在这当中，<br>▽ 既有不提供伙食的学校的案例，同时也有大概 61 万不吃学校伙食的儿童、学生，如果一律进行无偿化的话，无法将恩惠波及到所有人。  </p></blockquote><p>また、<br>▽生活困窮<sup><a href="">こんきゅう</a></sup>世帯は基本的にすでに無償化されているため、格差是正<sup><a href="">ぜせい</a></sup>の観点も乏しい<sup><a href="">とぼしい</a></sup>のに加え、<br>▽少なくとも4800億円余りの安定財源<sup><a href="">ざいげん</a></sup>が必要になるなどとしています。</p><blockquote><p>然而，<br>▽ 由于现在对生活贫困的一代基本（已经）完全无偿化，纠正价差的观点也有点站不住脚，<br>▽ 并且最少也需要 4,800 亿日元的稳定的经济来源。  </p></blockquote><p>石破総理大臣は「公平性をどう図るかという課題はある。きちんと解決したときに次の段階に移行する」と述べていて、政府としては、一連の課題を踏まえ、丁寧に検討を進める方針です。</p><blockquote><p>石破総理大臣说到：“有如何实现公平性的问题，完全地解决好之后会进入下个阶段”，作为政府，进行的是基于一系列的问题，仔细地持续讨论的方针。</p></blockquote><p>一方、立憲民主党と日本維新<sup><a href="">いしん</a></sup>の会、国民民主党の3党は、先の臨時国会に、公立の小中学校などの給食費を無償化する法案を共同で提出するなど、速やかな実現を求めていて、2025年の通常国会でも論点になりそうです。</p><blockquote><p>另一方面，立宪民主党、日本维新会和国民民主党三党在之前的临时国会上，共同提出无偿化公立中小学校等的伙食费的法案，并且追求迅速实现，似乎将在 2025 年的通常国会上成为争论焦点。  </p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;无偿化全国范围内的学校伙食费，将在通常国会上成为争论焦点&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - ChatGPT 手がける「オープンAI」 新たな営利企業が事業主導へ</title>
    <link href="https://senjianlu.com/2024/12/29/translate_news_nhk_20241228_k10014681701000/"/>
    <id>https://senjianlu.com/2024/12/29/translate_news_nhk_20241228_k10014681701000/</id>
    <published>2024-12-29T00:40:00.000Z</published>
    <updated>2024-12-29T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>开发 ChatGPT 的 OpenAI 将以新的盈利企业主导事业</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2024-12-28 08:54</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20241228/k10014681701000.html">ChatGPT 手がける「オープンAI」 新たな営利企業が事業主導へ</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>統治｜とうち①</li><li>巨額｜きょがく⓪</li><li>子会社｜こがいしゃ②</li><li>重視｜じゅうし①⓪</li><li>追求｜ついきゅう⓪</li><li>慈善｜じぜん⓪</li><li>存続｜そんぞく⓪</li></ol><hr><p>生成AIのChatGPTを手がけるアメリカの「オープンAI」は、非営利の組織が統治<sup><a href="">とうち</a></sup>する構造を見直し、新たな営利企業が事業の運営などを主導する方針を明らかにしました。巨額<sup><a href="">きょがく</a></sup>の資金を集めやすくして開発を加速<sup><a href="">かそく</a></sup>するねらいです。</p><blockquote><p>着手生成式 AI ChatGPT 的美国公司 OpenAI，重整其由非盈利组织统治的结构，明确了以全新的盈利企业（形象）主导事业的运营。目标是更轻松地筹集巨额资金来加速开发。</p></blockquote><p>オープンAIは2015年に安全なAI開発を目指す非営利の研究機関として設立され、現在は非営利の組織が営利部門の子会社<sup><a href="">こがいしゃ</a></sup>を統治する特殊な構造となっています。</p><blockquote><p>OpenAI 是于 2015 年以安全的 AI 开发作为目标成立的非盈利性质的研究机构，现在的组织结构是：非盈利的组织部分统治盈利部门的子公司的特殊的结构。</p></blockquote><p>オープンAIは27日、非営利の組織に代わって公益<sup><a href="">こうえき</a></sup>性を重視<sup><a href="">じゅうし</a></sup>した形の新たな営利企業が、事業の運営などを主導する方針を明らかにしました。</p><blockquote><p>OpenAI 在 27 日明确了：将使用新的、重视公益的盈利企业替代非盈利的组织来主导事业的运行。</p></blockquote><p>これによって株主などの利益を追求<sup><a href="">ついきゅう</a></sup>するとともに、競合他社と同じように資金を調達できるようになるとしています。</p><blockquote><p>决定通过这种方式追求利益的同时，变得和其他竞争公司一样能够调遣资金。</p></blockquote><p>一方、非営利の組織は健康や科学などの分野での慈善<sup><a href="">じぜん</a></sup>活動を継続する形で存続するということです。</p><blockquote><p>另一方面，非盈利的组织将以在健康和科学等领域从事慈善活动等形式继续存续下去。</p></blockquote><p>今回の見直しは巨額の資金を集めやすくして開発を加速するねらいで、オープンAIは「使命を果たし続けるためにも、想像していたより多くの資金を調達する必要がある」としています。</p><blockquote><p>本次的重整是以更方便地筹集资金来加速开发为目的的，OpenAI 表示“为了继续完成使命，有必要筹集比想象的更多的资金”。</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;开发 ChatGPT 的 OpenAI 将以新的盈利企业主导事业&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>SAP 考试每日练习 - 2024/12/27</title>
    <link href="https://senjianlu.com/2024/12/27/sap_test_daily_20241227/"/>
    <id>https://senjianlu.com/2024/12/27/sap_test_daily_20241227/</id>
    <published>2024-12-27T12:00:00.000Z</published>
    <updated>2024-12-27T15:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>来源：<a href="https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/">Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam</a><br>4 题 (No.14 ~ No.17)，仅供自己复习使用。<br>如果侵权请联系删除。</p></blockquote><span id="more"></span><hr><h3 id="一、Auto-Scaling-Group-terminate-event"><a href="#一、Auto-Scaling-Group-terminate-event" class="headerlink" title="一、Auto Scaling Group terminate event"></a>一、Auto Scaling Group terminate event</h3><p>A company is running an application on several Amazon EC2 instances in an Auto Scaling group behind an Application Load Balancer. The load on the application varies throughout the day, and EC2 instances are scaled in and out on a regular basis. Log files from the EC2 instances are copied to a central Amazon S3 bucket every 15 minutes. The security team discovers that log files are missing from some of the terminated EC2 instances.<br>Which set of actions will ensure that log files are copied to the central S3 bucket from the terminated EC2 instances?</p><ol><li>Create a script to copy log files to Amazon S3, and store the script in a file on the EC2 instance. Create an Auto Scaling lifecycle hook and an Amazon EventBridge rule to detect lifecycle events from the Auto Scaling group. Invoke an AWS Lambda function on the autoscaling:EC2_INSTANCE_TERMINATING transition to send ABANDON to the Auto Scaling group to prevent termination, run the script to copy the log files, and terminate the instance using the AWS SDK.</li><li>✅ Create an AWS Systems Manager document with a script to copy log files to Amazon S3. Create an Auto Scaling lifecycle hook and an Amazon EventBridge rule to detect lifecycle events from the Auto Scaling group. Invoke an AWS Lambda function on the autoscaling:EC2_INSTANCE_TERMINATING transition to call the AWS Systems Manager API SendCommand operation to run the document to copy the log files and send CONTINUE to the Auto Scaling group to terminate the instance.</li><li>Change the log delivery rate to every 5 minutes. Create a script to copy log files to Amazon S3, and add the script to EC2 instance user data. Create an Amazon EventBridge rule to detect EC2 instance termination. Invoke an AWS Lambda function from the EventBridge rule that uses the AWS CLI to run the user-data script to copy the log files and terminate the instance.</li><li>❌ Create an AWS Systems Manager document with a script to copy log files to Amazon S3. Create an Auto Scaling lifecycle hook that publishes a message to an Amazon Simple Notification Service (Amazon SNS) topic. From the SNS notification, call the AWS Systems Manager API SendCommand operation to run the document to copy the log files and send ABANDON to the Auto Scaling group to terminate the instance.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ❌ -&gt; 2️⃣ ✅</p></blockquote><blockquote><p>💡 解析：弹性组中的 <code>EC2</code> 实例每 15 分钟发送日志到统一的存储桶中，需要在终止的时候也执行这个操作。<br>如何监听弹性组的实例终止事件：<a href="https://aws.amazon.com/cn/blogs/infrastructure-and-automation/run-code-before-terminating-an-ec2-auto-scaling-instance/">Run code before terminating an EC2 Auto Scaling instance</a></p><blockquote><ol start="5"><li>Create a CloudWatch Events rule.  </li><li>Add a Systems Manager automation document as a CloudWatch Event target.</li></ol></blockquote><p>需要使用到 <code>CloudWatch Event</code> 和 <code>Systems Manager document</code>，因此选 2️⃣。<br>这里还需要注意 <code>EC2_INSTANCE_TERMINATING</code> 这个事件，它会在相应的钩子事件触发后进入等待状态，只有钩子事件给予继续的命令才会进行实际的实例终止行为：<a href="https://docs.aws.amazon.com/zh_cn/autoscaling/ec2/userguide/ec2-auto-scaling-lifecycle.html#as-lifecycle-hooks">生命周期钩子</a>  </p><blockquote><p>当 Amazon EC2 Auto Scaling 响应缩减事件时，它将终止一个或多个实例。这些实例将从 Auto Scaling 组中分离并进入 <code>Terminating</code> 状态。如果您已将一个 <code>autoscaling:EC2_INSTANCE_TERMINATING</code> 生命周期挂钩添加到您的 Auto Scaling 组，则实例将从 <code>Terminating</code> 状态转换为 <code>Terminating:Wait</code> 状态。完成生命周期操作后，实例将进入 <code>Terminating:Proceed</code> 状态。在完全终止实例后，实例将进入 <code>Terminated</code> 状态。</p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：B. Create an AWS Systems Manager document with a script to copy log files to Amazon S3. Create an Auto Scaling lifecycle hook and an Amazon EventBridge rule to detect lifecycle events from the Auto Scaling group. Invoke an AWS Lambda function on the autoscaling:EC2_INSTANCE_TERMINATING transition to call the AWS Systems Manager API SendCommand operation to run the document to copy the log files and send CONTINUE to the Auto Scaling group to terminate the instance. This approach will use the Auto Scaling lifecycle hook to execute the script that copies log files to S3, before the instance is terminated, ensuring that all log files are copied from the terminated instances.</p></blockquote><hr><h3 id="二、Cross-Account-DNS"><a href="#二、Cross-Account-DNS" class="headerlink" title="二、Cross Account DNS"></a>二、Cross Account DNS</h3><p>A company is using multiple AWS accounts. The DNS records are stored in a private hosted zone for Amazon Route 53 in Account A. The company’s applications and databases are running in Account B.<br>A solutions architect will deploy a two-tier application in a new VPC. To simplify the configuration, the db.example.com CNAME record set for the Amazon RDS endpoint was created in a private hosted zone for Amazon Route 53.<br>During deployment, the application failed to start. Troubleshooting revealed that db.example.com is not resolvable on the Amazon EC2 instance. The solutions architect confirmed that the record set was created correctly in Route 53.<br>Which combination of steps should the solutions architect take to resolve this issue? (Choose two.)</p><ol><li>❌ Deploy the database on a separate EC2 instance in the new VPC. Create a record set for the instance’s private IP in the private hosted zone.</li><li>Use SSH to connect to the application tier EC2 instance. Add an RDS endpoint IP address to the &#x2F;etc&#x2F;resolv.conf file.</li><li>✅ Create an authorization to associate the private hosted zone in Account A with the new VPC in Account B.</li><li>Create a private hosted zone for the example com domain in Account B. Configure Route 53 replication between AWS accounts.</li><li>✅ Associate a new VPC in Account B with a hosted zone in Account A. Delete the association authorization in Account A.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ 3️⃣ ❌ -&gt; 3️⃣ 5️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<code>Route 53</code> 的私有托管区在账户 A 中，数据库实例在账户 B 中。<br><a href="https://docs.aws.amazon.com/zh_cn/Route53/latest/DeveloperGuide/hosted-zone-private-associate-vpcs-different-accounts.html">将您创建的 Amazon VPC 和私有托管区域关联到不同的账户 AWS</a></p><blockquote><ol><li>使用创建托管区域的账户 A，授权（其他账户的）VPC 与私有托管区域的关联。  </li><li>使用创建 VPC 的账户 B，将 VPC 与托管区域关联。</li><li>（推荐）删除与托管区域 VPC 关联的授权。</li></ol></blockquote><p>本题的 3️⃣ 选项对应的就是操作 1，而 5️⃣ 选项对应的就是操作 2 和 3。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：C and E are correct.  </p><p>C. Create an authorization to associate the private hosted zone in Account A with the new VPC in Account B. This step is necessary because the VPC in Account B needs to be associated with the private hosted zone in Account A to be able to resolve the DNS records.  </p><p>E. Associate a new VPC in Account B with a hosted zone in Account A. Delete the association authorization in Account A. This step is necessary because the association authorization needs to be removed in Account A after the association is done in Account B.</p></blockquote><hr><h3 id="三、Content-distribution"><a href="#三、Content-distribution" class="headerlink" title="三、Content distribution"></a>三、Content distribution</h3><p>A company used Amazon EC2 instances to deploy a web fleet to host a blog site. The EC2 instances are behind an Application Load Balancer (ALB) and are configured in an Auto Scaling group. The web application stores all blog content on an Amazon EFS volume.<br>The company recently added a feature for bloggers to add video to their posts, attracting 10 times the previous user traffic. At peak times of day, users report buffering and timeout issues while attempting to reach the site or watch videos.<br>Which is the MOST cost-efficient and scalable deployment that will resolve the issues for users?</p><ol><li>Reconfigure Amazon EFS to enable maximum I&#x2F;O.</li><li>Update the blog site to use instance store volumes for storage. Copy the site contents to the volumes at launch and to Amazon S3 at shutdown.</li><li>✅ Configure an Amazon CloudFront distribution. Point the distribution to an S3 bucket, and migrate the videos from EFS to Amazon S3.</li><li>Set up an Amazon CloudFront distribution for all site contents, and point the distribution at the ALB.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：静态内容分发使用 <code>CloudFront</code> 和 <code>S3</code>。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：C. Configure an Amazon CloudFront distribution. Point the distribution to an S3 bucket, and migrate the videos from EFS to Amazon S3.  </p><p>Amazon CloudFront is a content delivery network (CDN) that can be used to deliver content to users with low latency and high data transfer speeds. By configuring a CloudFront distribution for the blog site and pointing it at an S3 bucket, the videos can be cached at edge locations closer to users, reducing buffering and timeout issues. Additionally, S3 is designed for scalable storage and can handle high levels of user traffic. Migrating the videos from EFS to S3, would also improve the performance and scalability of the website.</p></blockquote><hr><h3 id="四、AWS-Direct-Connect-Gateway"><a href="#四、AWS-Direct-Connect-Gateway" class="headerlink" title="四、AWS Direct Connect Gateway"></a>四、AWS Direct Connect Gateway</h3><p>A company with global offices has a single 1 Gbps AWS Direct Connect connection to a single AWS Region. The company’s on-premises network uses the connection to communicate with the company’s resources in the AWS Cloud. The connection has a single private virtual interface that connects to a single VPC.<br>A solutions architect must implement a solution that adds a redundant Direct Connect connection in the same Region. The solution also must provide connectivity to other Regions through the same pair of Direct Connect connections as the company expands into other Regions.<br>Which solution meets these requirements?</p><ol><li>✅ Provision a Direct Connect gateway. Delete the existing private virtual interface from the existing connection. Create the second Direct Connect connection. Create a new private virtual interface on each connection, and connect both private virtual interfaces to the Direct Connect gateway. Connect the Direct Connect gateway to the single VPC.</li><li>Keep the existing private virtual interface. Create the second Direct Connect connection. Create a new private virtual interface on the new connection, and connect the new private virtual interface to the single VPC.</li><li>Keep the existing private virtual interface. Create the second Direct Connect connection. Create a new public virtual interface on the new connection, and connect the new public virtual interface to the single VPC.</li><li>❌ Provision a transit gateway. Delete the existing private virtual interface from the existing connection. Create the second Direct Connect connection. Create a new private virtual interface on each connection, and connect both private virtual interfaces to the transit gateway. Associate the transit gateway with the single VPC.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ❌ -&gt; 1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://aws.amazon.com/cn/blogs/aws/new-aws-direct-connect-gateway-inter-region-vpc-access/">New – AWS Direct Connect Gateway – Inter-Region VPC Access</a></p><blockquote><p><img src="https://image.senjianlu.com/blog/2024-12-29/163516.png" alt="架构图">  </p></blockquote><p><a href="https://docs.aws.amazon.com/zh_cn/directconnect/latest/UserGuide/direct-connect-gateways-intro.html">AWS Direct Connect 网关</a></p><blockquote><p>使用 AWS Direct Connect 网关连接您的 VPC。将 AWS Direct Connect 网关与以下任一网关关联：</p><ul><li>当您在同一区域有多个 VPC 时的中转网关 (A transit gateway when you have multiple VPCs in the same Region)</li><li>虚拟私有网关 (A virtual private gateway)</li><li>An AWS Cloud WAN core network</li></ul></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A. Provision a Direct Connect gateway. Delete the existing private virtual interface from the existing connection. Create the second Direct Connect connection. Create a new private virtual interface on each connection, and connect both private virtual interfaces to the Direct Connect gateway. Connect the Direct Connect gateway to the single VPC.  </p><p>This solution provides a redundant Direct Connect connection in the same Region by creating a new private virtual interface on each connection, and connecting both private virtual interfaces to a Direct Connect gateway. The Direct Connect gateway is then connected to the single VPC. This solution also allows the company to expand into other Regions while providing connectivity through the same pair of Direct Connect connections.<br>The Direct Connect Gateway allows you to connect multiple VPCs and on-premises networks in different accounts and different regions to a single Direct Connect connection.<br>It also provides automatic failover and routing capabilities.</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/&quot;&gt;Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam&lt;/a&gt;&lt;br&gt;4 题 (No.14 ~ No.17)，仅供自己复习使用。&lt;br&gt;如果侵权请联系删除。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="备考" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%A4%87%E8%80%83/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="每日练习" scheme="https://senjianlu.com/tags/%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>AWS 知识点 - S3 (Simple Storage Service) - 拓展（针对 SAP-C02 认证）</title>
    <link href="https://senjianlu.com/2024/12/27/knowledge_s3_extend/"/>
    <id>https://senjianlu.com/2024/12/27/knowledge_s3_extend/</id>
    <published>2024-12-27T04:00:00.000Z</published>
    <updated>2024-12-27T04:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AWS S3 相关知识点。</p></blockquote><span id="more"></span><hr><h1 id="S3-存储桶跨区域复制-CRR"><a href="#S3-存储桶跨区域复制-CRR" class="headerlink" title="S3 存储桶跨区域复制 (CRR)"></a>S3 存储桶跨区域复制 (CRR)</h1><h3 id="一、S3-存储桶跨区域复制基本概念"><a href="#一、S3-存储桶跨区域复制基本概念" class="headerlink" title="一、S3 存储桶跨区域复制基本概念"></a>一、S3 存储桶跨区域复制基本概念</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_crr_01.png" alt="S3 存储桶跨区域复制基本概念"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;AWS S3 相关知识点。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="知识点" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAA" scheme="https://senjianlu.com/tags/SAA/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="S3" scheme="https://senjianlu.com/tags/S3/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - 11月の有効求人倍率 全国平均で1.25倍 前の月と同じ水準</title>
    <link href="https://senjianlu.com/2024/12/27/translate_news_nhk_20241227_k10014680161000/"/>
    <id>https://senjianlu.com/2024/12/27/translate_news_nhk_20241227_k10014680161000/</id>
    <published>2024-12-27T00:40:00.000Z</published>
    <updated>2024-12-27T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>11 月的有效招聘倍数为全国平均 1.25 倍，和之前的月份保持了相同水准</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2024-12-27 08:55</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20241227/k10014680161000.html">11月の有効求人倍率 全国平均で1.25倍 前の月と同じ水準</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>物価高｜ぶっかだか③</li><li>就業｜しゅうぎょう⓪</li><li>卸売｜おろしうり⓪③<sub><u>卸货贩卖，在商品流通过程中，介于制造、采收（生鲜食品）和零售之间的中介行业。</u></sub></li><li>小売｜こうり⓪<sub><u>零售。</u></sub></li><li>宿泊｜しゅくはく⓪</li><li>注視｜ちゅうし⓪</li></ol><hr><p>11月の有効求人倍率は全国平均で1.25倍で、前の月と同じ水準となり、厚生労働省は「働き方改革の影響で運輸業では求人を増やす動きがあるが、物価高<sup><a href="">ぶっかだか</a></sup>の影響で建設業や製造業では求人を減らす動きがある」としています。</p><blockquote><p>11 月的有效招聘倍数为全国平均 1.25 倍，和之前的月份保持了相同水准，厚生劳动省正表示：“受到劳动方法改革的影响，虽然出现了运输业招聘增多的动向，不过由于高物价的影响，建造业和制造业出现了招聘减少的动向。”</p></blockquote><p>厚生労働省によりますと、仕事を求めている人1人に対して何人の求人があるかを示す有効求人倍率は、11月、全国平均で1.25倍となり、前の月と同じ水準でした。</p><blockquote><p>据厚生劳动省描述，展示 1 个求职人员有几个招聘岗位的有效招聘倍数，在 11 月为全国平均 1.25 倍，和之前的月份保持了相同的水准。</p></blockquote><p>都道府県別の有効求人倍率を就業<sup><a href="">しゅうぎょう</a></sup>地別でみると、最も高いのは福井県で1.91倍、次いで、山口県が1.66倍、香川県が1.62倍となりました。</p><blockquote><p>如果按就职地点看各都道府县的有效招聘倍数的化，最高的是福井县有 1.91 倍，之后是山口县的 1.66 倍和香川县的 1.62 倍。</p></blockquote><p>また、最も低いのは北海道で1.05倍で、大阪府で1.07倍、福岡県が1.08倍となりました。</p><blockquote><p>然后，最低的是北海道的 1.05 倍，大阪府的 1.07 倍和福冈县的 1.08 倍。</p></blockquote><p>新規求人を産業別にみると、去年の同じ月に比べて、「運輸業、郵便業」で2.0％、「卸売<sup><a href="">おろしうり</a></sup>業、小売<sup><a href="">こうり</a></sup>業」で0.9％増加しました。</p><blockquote><p>如果将新增招聘按产业划分来看的话，和去年的同月相比，运输业和快递业增加了 2.0%，批发和零售业增加了 0.9%。</p></blockquote><p>一方で、「宿泊<sup><a href="">しゅくはく</a></sup>業、飲食サービス業」で12.2％、「教育、学習支援業」で6.4％の減少となりました。</p><blockquote><p>另一方面，酒店业和餐饮服务业减少了 12.2%，教育和学习支援行业减少了 6.4%。</p></blockquote><p>厚生労働省は「ことし4月から時間外労働の上限規制が始まり働き方改革の影響を受けている運輸業では求人を増やす動きがある。その一方で建設業や製造業では物価高の影響で原材料費が上がり、求人を減らす動きが出ていて、今後の動向に注視<sup><a href="">ちゅうし</a></sup>が必要だ」とコメントしています。</p><blockquote><p>厚生劳动省表示：“受到今年 4 月开始的对工作时间外的劳动进行限制的劳动方式改革的影响，运输业出现了招聘增多的动向。另一方面建筑业和制造业受到物价上涨的影响，原材料费用增多，出现了招聘减少的动向，今后还需要继续保持关注。”</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;11 月的有效招聘倍数为全国平均 1.25 倍，和之前的月份保持了相同水准&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>SAP 考试每日练习 - 2024/12/26</title>
    <link href="https://senjianlu.com/2024/12/26/sap_test_daily_20241226./"/>
    <id>https://senjianlu.com/2024/12/26/sap_test_daily_20241226./</id>
    <published>2024-12-26T12:00:00.000Z</published>
    <updated>2024-12-26T15:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>来源：<a href="https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/">Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam</a><br>13 题 (No.1 ~ No.13)，仅供自己复习使用。<br>如果侵权请联系删除。</p></blockquote><span id="more"></span><hr><h3 id="一、DNS-solution"><a href="#一、DNS-solution" class="headerlink" title="一、DNS solution"></a>一、DNS solution</h3><p>A company needs to architect a hybrid DNS solution. This solution will use an Amazon Route 53 private hosted zone for the domain cloud.example.com for the resources stored within VPCs.<br>The company has the following DNS resolution requirements:<br>On-premises systems should be able to resolve and connect to cloud.example.com.<br>All VPCs should be able to resolve cloud.example.com.<br>There is already an AWS Direct Connect connection between the on-premises corporate network and AWS Transit Gateway.<br>Which architecture should the company use to meet these requirements with the HIGHEST performance?  </p><ol><li>✅ Associate the private hosted zone to all the VPCs. Create a Route 53 inbound resolver in the shared services VPC. Attach all VPCs to the transit gateway and create forwarding rules in the on-premises DNS server for cloud.example.com that point to the inbound resolver.</li><li>Associate the private hosted zone to all the VPCs. Deploy an Amazon EC2 conditional forwarder in the shared services VPC. Attach all VPCs to the transit gateway and create forwarding rules in the on-premises DNS server for cloud.example.com that point to the conditional forwarder.</li><li>Associate the private hosted zone to the shared services VPC. Create a Route 53 outbound resolver in the shared services VPAttach all VPCs to the transit gateway and create forwarding rules in the on-premises DNS server for cloud.example.com that point to the outbound resolver.</li><li>❌ Associate the private hosted zone to the shared services VPC. Create a Route 53 inbound resolver in the shared services VPC. Attach the shared services VPC to the transit gateway and create forwarding rules in the on-premises DNS server for cloud.example.com that point to the inbound resolver.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ❌ -&gt; 1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：公司需要一个混合 DNS 解决方案。本地和所有 AWS 的 <code>VPC</code> 都需要能够使用 <code>Route 53</code> 的私有托管区来解析 cloud.example.com 域名之后访问存储在 <code>VPC</code> 中的资源。目前在本地和 <code>AWS Transit Gateway</code> 之间已经有了一条 <code>DX</code> 连接。问为了追求最高性能还需要做什么？<br>1️⃣ 和 4️⃣ 的差别在于是将 <code>Route 53</code> 的私有托管区连接到所有 <code>VPC</code> 还是单纯附加给共享服务的 <code>VPC</code>，还有是将所有 <code>VPC</code> 还是只将共享服务的 <code>VPC</code> 附加给 <code>AWS Transit Gateway</code>。<br>针对题目中的所有 <code>VPC</code> 都需要能够解析域名，其实就该选 1️⃣ 了。  </p><p>不过还是确认两个概念：</p><ol><li>可以为 <code>Route 53</code> 的私有托管区联系更多 <code>VPC</code><br> <a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zone-private-associate-vpcs.html">Associating more VPCs with a private hosted zone</a></li><li>可以将 <code>VPC</code> 附加到 <code>AWS Transit Gateway</code> 以实现互联<br> <a href="https://docs.aws.amazon.com/whitepapers/latest/aws-vpc-connectivity-options/aws-transit-gateway.html">AWS Transit Gateway</a>  <blockquote><p>AWS Transit Gateway 是一种高可用性和可扩展性的服务，用于为具有中心辐射架构的区域整合 AWS VPC 路由配置。每个辐条 VPC 只需连接到转接网关，即可访问其他已连接的 VPC。AWS Transit Gateway 支持 IPv4 和 IPv6 流量。<br><img src="https://image.senjianlu.com/blog/2024-12-27/aws-transit-gateway.png" alt="AWS Transit Gateway 跨区域架构"></p></blockquote></li></ol><p>相应实践：<a href="https://aws.amazon.com/cn/blogs/networking-and-content-delivery/centralized-dns-management-of-hybrid-cloud-with-amazon-route-53-and-aws-transit-gateway/">Centralized DNS management of hybrid cloud with Amazon Route 53 and AWS Transit Gateway</a></p><blockquote><p><img src="https://image.senjianlu.com/blog/2024-12-27/image2-1.png" alt="architecture"></p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A. Correct answer.Source: <a href="https://aws.amazon.com/blogs/networking-and-content-delivery/centralized-dns-management-of-hybrid-cloud-with-amazon-route-53-and-aws-transit-gateway/">https://aws.amazon.com/blogs/networking-and-content-delivery/centralized-dns-management-of-hybrid-cloud-with-amazon-route-53-and-aws-transit-gateway/</a>  </p><p>NOT B. EC2 conditional forwarder will not meet Highest performance requirement.  </p><p>NOT C. Missing: Need to associate private hosted zone to all VPC.<br>“All VPC’s will need to associate their private hosted zones to all other VPC’s if required to.”  </p><p>NOT D. Missing: Need to associate private hosted zone to all VPC.<br>“All VPC’s will need to associate their private hosted zones to all other VPC’s if required to.”  </p></blockquote><hr><h3 id="二、DNS-HA-over-Regions"><a href="#二、DNS-HA-over-Regions" class="headerlink" title="二、DNS HA over Regions"></a>二、DNS HA over Regions</h3><p>A company is providing weather data over a REST-based API to several customers. The API is hosted by Amazon API Gateway and is integrated with different AWS Lambda functions for each API operation. The company uses Amazon Route 53 for DNS and has created a resource record of weather.example.com. The company stores data for the API in Amazon DynamoDB tables.<br>The company needs a solution that will give the API the ability to fail over to a different AWS Region.<br>Which solution will meet these requirements?</p><ol><li>Deploy a new set of Lambda functions in a new Region. Update the API Gateway API to use an edge-optimized API endpoint with Lambda functions from both Regions as targets. Convert the DynamoDB tables to global tables.</li><li>Deploy a new API Gateway API and Lambda functions in another Region. Change the Route 53 DNS record to a multivalue answer. Add both API Gateway APIs to the answer. Enable target health monitoring. Convert the DynamoDB tables to global tables.</li><li>✅ Deploy a new API Gateway API and Lambda functions in another Region. Change the Route 53 DNS record to a failover record. Enable target health monitoring. Convert the DynamoDB tables to global tables.</li><li>Deploy a new API Gateway API in a new Region. Change the Lambda functions to global functions. Change the Route 53 DNS record to a multivalue answer. Add both API Gateway APIs to the answer. Enable target health monitoring. Convert the DynamoDB tables to global tables.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/dns-failover.html">Configure custom health checks for DNS failover for an API Gateway API</a>  </p><blockquote><p>您可以使用 Amazon Route 53 健康检查来控制从主 AWS 区域中的 API Gateway API 到辅助区域中的 API Gateway API 的 DNS 故障转移。这有助于在发生区域问题时减轻影响。如果使用自定义域，则无需客户更改 API 端点即可执行故障转移。</p></blockquote><p>1️⃣ 的选项中提到了 <code>edge-optimized API endpoint</code>，确认下：<a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-api-endpoint-types.html">API endpoint types for REST APIs in API Gateway</a></p><blockquote><ul><li><strong>Edge-optimized API endpoints</strong> （边缘优化的应用程序接口端点）- 边缘优化的 API 端点通常会将请求路由到最近的 CloudFront 存在点 (POP)，这对于客户分布在不同地理位置的情况很有帮助。这是 API Gateway REST API 的默认端点类型。</li><li><strong>Regional API endpoints</strong> （区域应用程序接口端点）- 区域 API 端点面向同一区域的客户端。当运行在 EC2 实例上的客户端调用同一区域的 API 时，或者当 API 的目的是为少量需求较高的客户端提供服务时，区域 API 可以减少连接开销。</li><li><strong>Private API endpoints</strong> （专用应用程序接口端点）- 私有 API 端点是只能从亚马逊虚拟私有云 (VPC) 使用接口 VPC 端点访问的 API 端点，接口 VPC 端点是您在 VPC 中创建的端点网络接口 (ENI)。</li></ul></blockquote><p>它更多是用以优化延迟，而非容灾。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：<a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/dns-failover.html">https://docs.aws.amazon.com/apigateway/latest/developerguide/dns-failover.html</a></p></blockquote><hr><h3 id="三、OU-and-SCP"><a href="#三、OU-and-SCP" class="headerlink" title="三、OU and SCP"></a>三、OU and SCP</h3><p>A company uses AWS Organizations with a single OU named Production to manage multiple accounts. All accounts are members of the Production OU. Administrators use deny list SCPs in the root of the organization to manage access to restricted services.<br>The company recently acquired a new business unit and invited the new unit’s existing AWS account to the organization. Once onboarded, the administrators of the new business unit discovered that they are not able to update existing AWS Config rules to meet the company’s policies.<br>Which option will allow administrators to make changes and continue to enforce the current policies without introducing additional long-term maintenance?</p><ol><li>Remove the organization’s root SCPs that limit access to AWS Config. Create AWS Service Catalog products for the company’s standard AWS Config rules and deploy them throughout the organization, including the new account.</li><li>Create a temporary OU named Onboarding for the new account. Apply an SCP to the Onboarding OU to allow AWS Config actions. Move the new account to the Production OU when adjustments to AWS Config are complete.</li><li>Convert the organization’s root SCPs from deny list SCPs to allow list SCPs to allow the required services only. Temporarily apply an SCP to the organization’s root that allows AWS Config actions for principals only in the new account.</li><li>✅ Create a temporary OU named Onboarding for the new account. Apply an SCP to the Onboarding OU to allow AWS Config actions. Move the organization’s root SCP to the Production OU. Move the new account to the Production OU when adjustments to AWS Config are complete.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ✅</p></blockquote><blockquote><p>💡 解析：旧的策略附加到了根上，导致组织中所有非管理账户的用户都无法操作 <code>AWS Config</code>。<br><code>SCP</code> 不授予权限只控制权限，因此 2️⃣ 不对，只能选 4️⃣：<a href="https://docs.aws.amazon.com/zh_cn/organizations/latest/userguide/orgs_manage_policies_scps.html">服务控制策略 (SCPs)</a></p><blockquote><p>SCP 不会向组织中的 IAM 用户和 IAM 角色授予权限。SCP 不授予任何权限。SCP 为组织中的 IAM 用户和 IAM 角色可以执行的操作定义了权限护栏或设置了限制。要授予权限，管理员必须附加控制访问的策略，如附加到 IAM 用户和 IAM 角色的基于身份的策略，以及附加到账户资源的基于资源的策略。更多信息，请参阅《IAM 用户指南》中的基于身份的策略和基于资源的策略。</p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：Right answer is D.<br>An SCP at a lower level can’t add a permission after it is blocked byan SCP at a higher level.SCPs can only filter; they never add permissions.<br>SO you need to create a new OU for the new account assign an SCP,and move the rootSCP to Production OU.Then move the new account to production OU when AWS config is done.  </p></blockquote><hr><h3 id="四、Auto-Scaling"><a href="#四、Auto-Scaling" class="headerlink" title="四、Auto Scaling"></a>四、Auto Scaling</h3><p>A company is running a two-tier web-based application in an on-premises data center. The application layer consists of a single server running a stateful application. The application connects to a PostgreSQL database running on a separate server. The application’s user base is expected to grow significantly, so the company is migrating the application and database to AWS.<br>The solution will use Amazon Aurora PostgreSQL, Amazon EC2 Auto Scaling, and Elastic Load Balancing.<br>Which solution will provide a consistent user experience that will allow the application and database tiers to scale?</p><ol><li>Enable Aurora Auto Scaling for Aurora Replicas. Use a Network Load Balancer with the least outstanding requests routing algorithm and sticky sessions enabled.</li><li>Enable Aurora Auto Scaling for Aurora writers. Use an Application Load Balancer with the round robin routing algorithm and sticky sessions enabled.</li><li>✅ Enable Aurora Auto Scaling for Aurora Replicas. Use an Application Load Balancer with the round robin routing and sticky sessions enabled.</li><li>Enable Aurora Scaling for Aurora writers. Use a Network Load Balancer with the least outstanding requests routing algorithm and sticky sessions enabled.</li></ol><blockquote><p>✨ 关键词：stateful application</p></blockquote><blockquote><p>3️⃣ ✅</p></blockquote><blockquote><p>💡 解析：针对弹性扩展器的路由策略：<a href="https://docs.aws.amazon.com/zh_cn/elasticloadbalancing/latest/application/load-balancer-target-groups.html#modify-routing-algorithm">路由算法</a></p><blockquote><ul><li><strong>轮询</strong> (Round robin) - 轮询路由算法按顺序将请求均匀地路由到目标组中运行状况良好的目标。</li><li><strong>最少未完成请求</strong> (Least outstanding requests) - 最少未完成的请求路由算法将请求路由到正在进行的请求数最少的目标。</li><li><strong>加权随机</strong> (Weighted random) - 加权随机路由算法以随机顺序在目标组中运行状况良好的目标之间均匀路由请求。</li></ul></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：C.</p><ul><li>Aurora writers is a distractor.</li><li>Single master mode only has read replica - with Aurora replicas.</li><li>Multi master mode, not in the options</li><li>NLB does not support round robin and least outstanding algorithm</li></ul><p><a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Integrating.AutoScaling.html">https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Integrating.AutoScaling.html</a></p></blockquote><hr><h3 id="五、CloudFront-function"><a href="#五、CloudFront-function" class="headerlink" title="五、CloudFront function"></a>五、CloudFront function</h3><p>A company uses a service to collect metadata from applications that the company hosts on premises. Consumer devices such as TVs and internet radios access the applications. Many older devices do not support certain HTTP headers and exhibit errors when these headers are present in responses. The company has configured an on-premises load balancer to remove the unsupported headers from responses sent to older devices, which the company identified by the User-Agent headers.<br>The company wants to migrate the service to AWS, adopt serverless technologies, and retain the ability to support the older devices. The company has already migrated the applications into a set of AWS Lambda functions.<br>Which solution will meet these requirements?</p><ol><li>✅ Create an Amazon CloudFront distribution for the metadata service. Create an Application Load Balancer (ALB). Configure the CloudFront distribution to forward requests to the ALB. Configure the ALB to invoke the correct Lambda function for each type of request. Create a CloudFront function to remove the problematic headers based on the value of the User-Agent header.</li><li>Create an Amazon API Gateway REST API for the metadata service. Configure API Gateway to invoke the correct Lambda function for each type of request. Modify the default gateway responses to remove the problematic headers based on the value of the User-Agent header.</li><li>Create an Amazon API Gateway HTTP API for the metadata service. Configure API Gateway to invoke the correct Lambda function for each type of request. Create a response mapping template to remove the problematic headers based on the value of the User-Agent. Associate the response data mapping with the HTTP API.</li><li>❌ Create an Amazon CloudFront distribution for the metadata service. Create an Application Load Balancer (ALB). Configure the CloudFront distribution to forward requests to the ALB. Configure the ALB to invoke the correct Lambda function for each type of request. Create a Lambda@Edge function that will remove the problematic headers in response to viewer requests based on the value of the User-Agent header.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>4️⃣ ❌ -&gt; 1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<code>CloudFront</code> 是支持简单的 JavaScript 方法的：<a href="https://docs.aws.amazon.com/zh_cn/AmazonCloudFront/latest/DeveloperGuide/cloudfront-functions.html">使用 CloudFront Functions 在边缘进行自定义</a></p><blockquote><p>借助 CloudFront Functions，您可以在 JavaScript 中编写轻量级函数，以实现大规模、延迟敏感的 CDN 自定义。您的函数可以操作通过 CloudFront 的请求和响应、执行基本身份验证和授权、在边缘生成 HTTP 响应等。CloudFront Functions 运行时环境提供亚毫秒的启动时间，可立即扩展，从而每秒处理数百万个请求，并且非常安全。CloudFront Functions 是 CloudFront 的原生功能，这意味着您可以完全在 CloudFront 中构建、测试和部署代码。</p><p>在将 CloudFront 函数与 CloudFront 分配相关联时，CloudFront 在 CloudFront 边缘站点中截获请求和响应并将它们传递到您的函数。当发生以下事件时，您可以调用 CloudFront Functions：</p><ul><li>在 CloudFront 收到查看器的请求时 (查看器请求)</li><li>在 CloudFront 将响应返回到查看器之前（查看器响应）</li></ul></blockquote><p>同时它也能够对 HTTP 请求头进行处理：<a href="https://docs.aws.amazon.com/zh_cn/AmazonCloudFront/latest/DeveloperGuide/modifying-response-headers.html">使用策略在 CloudFront 响应中添加或删除 HTTP 标头</a></p><blockquote><p>您可以配置 CloudFront 以修改它发送给查看器（Web 浏览器和其他客户端）的响应中的 HTTP 标头。在将响应发送给查看器之前，CloudFront 可以删除从源接收到的标头，或者在响应中添加标头。进行这些更改不需要编写代码或更改源。</p></blockquote><p>社区对 1️⃣ 和 4️⃣ 存在争议，这里 1️⃣ 可以更简单地实现需求。  </p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A.The only difference between A and D is CloudFront function vs Lambda@Edge. In this case the CloudFront function can remove the response header based on request header and much faster&#x2F;light-weight.</p></blockquote><hr><h3 id="六、Cross-Account-S3-Access"><a href="#六、Cross-Account-S3-Access" class="headerlink" title="六、Cross Account S3 Access"></a>六、Cross Account S3 Access</h3><p>A retail company needs to provide a series of data files to another company, which is its business partner. These files are saved in an Amazon S3 bucket under Account A, which belongs to the retail company. The business partner company wants one of its IAM users, User_DataProcessor, to access the files from its own AWS account (Account B).<br>Which combination of steps must the companies take so that User_DataProcessor can access the S3 bucket successfully? (Choose two.)</p><ol><li>❌ Turn on the cross-origin resource sharing (CORS) feature for the S3 bucket in Account A.</li><li>In Account A, set the S3 bucket policy to the following:<br> <img src="https://image.senjianlu.com/blog/2024-12-27/6_B.png" alt="6 - B"></li><li>✅ In Account A, set the S3 bucket policy to the following:<br> <img src="https://image.senjianlu.com/blog/2024-12-27/6_C.png" alt="6 - C"></li><li>✅ In Account B, set the permissions of User_DataProcessor to the following:<br> <img src="https://image.senjianlu.com/blog/2024-12-27/6_D_1.png" alt="6 - D - 1"><br> <img src="https://image.senjianlu.com/blog/2024-12-27/6_D_2.png" alt="6 - D - 2"></li><li>In Account B, set the permissions of User_DataProcessor to the following:<br> <img src="https://image.senjianlu.com/blog/2024-12-27/6_E.png" alt="6 - E"></li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ 3️⃣ ❌ -&gt; 3️⃣ 4️⃣ ✅</p></blockquote><blockquote><p>💡 解析：3️⃣ 不存在问题，在账户 A 允许账户 B 的某个 <code>IAM 用户</code> 访问存储桶。<br>而针对 4️⃣，相关的事件文章中有准确描述：<a href="https://repost.aws/zh-Hans/knowledge-center/cross-account-access-s3">如何授予对 Amazon S3 存储桶中对象的跨账户访问权限？</a></p><blockquote><p>向账户 B 中的 IAM 用户或角色授予 GetObject 和 PutObject 权限。此外，授予 IAM 用户或角色调用 PutObjectAcl 的权限，该权限向存储桶所有者授予对象权限：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;s3:GetObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;s3:PutObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;s3:PutObjectAcl&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::AccountABucketName/*&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote><p>相关的文档还有：<a href="https://docs.aws.amazon.com/zh_cn/AmazonS3/latest/userguide/example-walkthroughs-managing-access-example4.html">示例 4：存储桶拥有者针对自己未拥有的对象授予跨账户权限</a></p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：C &amp; D<br>To allow User_DataProcessor to access the S3 bucket from Account B, the following steps need to be taken:  </p><p>In Account A, set the S3 bucket policy to allow access to the bucket from the IAM user in Account B.This is done byadding a statement to the bucket policy that allows the IAM user in Account B to perform the necessaryactions (GetObject and ListBucket) on the bucket and its contents.  </p><p>In Account B, create an IAM policy that allows the IAM user (User_DataProcessor) to perform the necessaryactions (GetObject and ListBucket) on the S3 bucket and its contents.The policy should reference the ARN of the S3 bucket and the actions that the user isallowed to perform.</p><p>Note: turning on the cross-origin resource sharing (CORS) feature for the S3 bucket in Account A is not necessary for this scenario as it is typically used for allowing web browsers to access resources from different domains.</p></blockquote><hr><h3 id="七、Microservices-and-serverless"><a href="#七、Microservices-and-serverless" class="headerlink" title="七、Microservices and serverless"></a>七、Microservices and serverless</h3><p>A company is running a traditional web application on Amazon EC2 instances. The company needs to refactor the application as microservices that run on containers. Separate versions of the application exist in two distinct environments: production and testing. Load for the application is variable, but the minimum load and the maximum load are known. A solutions architect needs to design the updated application with a serverless architecture that minimizes operational complexity.<br>Which solution will meet these requirements MOST cost-effectively?</p><ol><li>Upload the container images to AWS Lambda as functions. Configure a concurrency limit for the associated Lambda functions to handle the expected peak load. Configure two separate Lambda integrations within Amazon API Gateway: one for production and one for testing.</li><li>✅ Upload the container images to Amazon Elastic Container Registry (Amazon ECR). Configure two auto scaled Amazon Elastic Container Service (Amazon ECS) clusters with the Fargate launch type to handle the expected load. Deploy tasks from the ECR images. Configure two separate Application Load Balancers to direct traffic to the ECS clusters.</li><li>Upload the container images to Amazon Elastic Container Registry (Amazon ECR). Configure two auto scaled Amazon Elastic Kubernetes Service (Amazon EKS) clusters with the Fargate launch type to handle the expected load. Deploy tasks from the ECR images. Configure two separate Application Load Balancers to direct traffic to the EKS clusters.</li><li>Upload the container images to AWS Elastic Beanstalk. In Elastic Beanstalk, create separate environments and deployments for production and testing. Configure two separate Application Load Balancers to direct traffic to the Elastic Beanstalk deployments.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>2️⃣ ✅</p></blockquote><blockquote><p>💡 解析：微服务和容器化的无服务器架构离不开 <code>Fargate</code>，<code>ECS</code> 相比 <code>EKS</code> 操作更简单。</p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：B. Upload the container images to Amazon Elastic Container Registry (Amazon ECR). Configure two auto scaled Amazon Elastic ContainerService (Amazon ECS) clusters with the Fargate launch type to handle the expected load. Deploy tasks from the ECR images. Configure two separate Application Load Balancers to direct traffic to the ECS clusters.<br>This option meets the requirement of using a serverlessarchitecture by utilizing the Fargate launch type for the ECS clusters, which allows for automatic scaling of the containers based on the expected load. It also allows for separate deployments for production and testing by configuring separate ECS clustersand Application Load Balancers foreach environment.This option also minimizes operational complexity by utilizing ECS and Fargate for the container orchestration and scaling.</p></blockquote><hr><h3 id="八、Route-53-health-check"><a href="#八、Route-53-health-check" class="headerlink" title="八、Route 53 health check"></a>八、Route 53 health check</h3><p>A company has a multi-tier web application that runs on a fleet of Amazon EC2 instances behind an Application Load Balancer (ALB). The instances are in an Auto Scaling group. The ALB and the Auto Scaling group are replicated in a backup AWS Region.<br>The minimum value and the maximum value for the Auto Scaling group are set to zero. An Amazon RDS Multi-AZ DB instance stores the application’s data. The DB instance has a read replica in the backup Region. The application presents an endpoint to end users by using an Amazon Route 53 record.<br>The company needs to reduce its RTO to less than 15 minutes by giving the application the ability to automatically fail over to the backup Region. The company does not have a large enough budget for an active-active strategy.<br>What should a solutions architect recommend to meet these requirements?</p><ol><li>Reconfigure the application’s Route 53 record with a latency-based routing policy that load balances traffic between the two ALBs. Create an AWS Lambda function in the backup Region to promote the read replica and modify the Auto Scaling group values. Create an Amazon CloudWatch alarm that is based on the HTTPCode_Target_5XX_Count metric for the ALB in the primary Region. Configure the CloudWatch alarm to invoke the Lambda function.  </li><li>✅ Create an AWS Lambda function in the backup Region to promote the read replica and modify the Auto Scaling group values. Configure Route 53 with a health check that monitors the web application and sends an Amazon Simple Notification Service (Amazon SNS) notification to the Lambda function when the health check status is unhealthy. Update the application’s Route 53 record with a failover policy that routes traffic to the ALB in the backup Region when a health check failure occurs.</li><li>Configure the Auto Scaling group in the backup Region to have the same values as the Auto Scaling group in the primary Region. Reconfigure the application’s Route 53 record with a latency-based routing policy that load balances traffic between the two ALBs. Remove the read replica. Replace the read replica with a standalone RDS DB instance. Configure Cross-Region Replication between the RDS DB instances by using snapshots and Amazon S3.</li><li>Configure an endpoint in AWS Global Accelerator with the two ALBs as equal weighted targets. Create an AWS Lambda function in the backup Region to promote the read replica and modify the Auto Scaling group values. Create an Amazon CloudWatch alarm that is based on the HTTPCode_Target_5XX_Count metric for the ALB in the primary Region. Configure the CloudWatch alarm to invoke the Lambda function.</li></ol><blockquote><p>✨ 关键词：RTO less than 15 minutes</p></blockquote><blockquote><p>2️⃣ ✅</p></blockquote><blockquote><p>💡 解析：公司在另一个区域部署了 0 容量的自动扩容组等架构，同时有只读的 <code>RDS</code> 副本。在没有太多预算的情况下希望控制 RTO 少于 15 分钟。<br>3️⃣ 涉及到启动空闲实例，不满足预算要求，首先排除。<br>4️⃣ 在两个 <code>ALB</code> 前面部署全球加速器，没有必要也排除。<br>1️⃣ 对 <code>ALB</code> 响应码进行判断，调用 <code>Lambda</code> 函数启动备份架构。<br>2️⃣ 使用 <code>Route 53</code> 的健康检查和 <code>SNS</code> 调用 <code>Lambda</code> 函数启动备份架构。  </p><p>2️⃣ 设计到了 <code>Route 53</code> 的健康检查这个 AWS 提供的功能，更加符合出题目的：<a href="https://docs.amazonaws.cn/Route53/latest/DeveloperGuide/welcome-health-checks.html">Amazon Route 53 如何检查您的资源的运行状况</a></p><blockquote><p>Amazon Route 53 运行状况检查可监控您的资源（如 Web 服务器和电子邮件服务器）的运行状况。您可以选择为运行状况检查配置 Amazon CloudWatch 警报，以便在资源不可用时收到通知。<br>如果您希望在资源变得不可用时收到通知，下面概述了运行状况检查的工作原理：<br><img src="https://image.senjianlu.com/blog/2024-12-27/how-health-checks-work.png" alt="健康检查的工作原理"></p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：B is correct, because it meets the company’s requirements for reducing RTO to less than 15 minutesand not having a large budget for an active-active strategy.</p><p>In this solution, the company createsan AWS Lambda function in the backup region which promotes the read replica and modifies the Auto Scaling group values. Route 53 is configured with a health checkthat monitors the web application and sendsan Amazon SNS notification to the Lambda function when the health checkstatus is unhealthy.The Route 53 record is also updated with a failover policy that routes traffic to the ALB in the backup region when a health checkfailure occurs.This way, when the primary region goes down, the failover policy triggersand traffic is directed to the backup region,ensuring a quickrecovery time.</p></blockquote><hr><h3 id="九、HA-infrastructure"><a href="#九、HA-infrastructure" class="headerlink" title="九、HA infrastructure"></a>九、HA infrastructure</h3><p>A company is hosting a critical application on a single Amazon EC2 instance. The application uses an Amazon ElastiCache for Redis single-node cluster for an in-memory data store. The application uses an Amazon RDS for MariaDB DB instance for a relational database. For the application to function, each piece of the infrastructure must be healthy and must be in an active state.<br>A solutions architect needs to improve the application’s architecture so that the infrastructure can automatically recover from failure with the least possible downtime.<br>Which combination of steps will meet these requirements? (Choose three.)</p><ol><li>✅ Use an Elastic Load Balancer to distribute trafficacross multiple EC2 instances. Ensure that the EC2 instances are part of an Auto Scaling group that has a minimum capacity of two instances.</li><li>Use an Elastic Load Balancer to distribute trafficacross multiple EC2 instances. Ensure that the EC2 instances are configured in unlimited mode.</li><li>Modify the DB instance to create a read replica in the same Availability Zone. Promote the read replica to be the primary DB instance in failure scenarios.</li><li>✅ Modify the DB instance to create a Multi-AZ deployment that extends across two Availability Zones.</li><li>Create a replication group for the ElastiCache for Redis cluster. Configure the cluster to use an Auto Scaling group that has a minimum capacity of two instances.</li><li>✅ Create a replication group for the ElastiCache for Redis cluster. Enable Multi-AZ on the cluster.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ 4️⃣ 6️⃣ ✅</p></blockquote><blockquote><p>💡 解析：1️⃣ 4️⃣ 6️⃣ 都是可用性最高的选择。<br><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/dg/AutoFailover.html">通过使用 Valkey 和 Redis OSS 的 Multi-AZ 将 ElastiCache 的停机时间降至最短</a></p><blockquote><p>在许多情况下，ElastiCache for Valkey 和 Redis OSS 可能需要替换主节点；其中包括某些类型的计划维护，以及主节点或可用区发生故障的可能性不大的情况。<br>这种替换会导致群集出现一定的停机时间，但如果启用了多可用区，停机时间会降到最低。主节点的角色将自动切换到其中一个读取副本。无需创建和配置新的主节点，因为 ElastiCache 会以透明的方式进行处理。这种故障切换和副本升级可确保您在升级完成后立即恢复写入新的主节点。</p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：I go with ADF<br><a href="https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html">https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/AutoFailover.html</a></p></blockquote><hr><h3 id="十、ALB-error-page"><a href="#十、ALB-error-page" class="headerlink" title="十、ALB error page"></a>十、ALB error page</h3><p>A retail company is operating its ecommerce application on AWS. The application runs on Amazon EC2 instances behind an Application Load Balancer (ALB). The company uses an Amazon RDS DB instance as the database backend. Amazon CloudFront is configured with one origin that points to the ALB. Static content is cached. Amazon Route 53 is used to host all public zones.<br>After an update of the application, the ALB occasionally returns a 502 status code (Bad Gateway) error. The root cause is malformed HTTP headers that are returned to the ALB. The webpage returns successfully when a solutions architect reloads the webpage immediately after the error occurs.<br>While the company is working on the problem, the solutions architect needs to provide a custom error page instead of the standard ALB error page to visitors.<br>Which combination of steps will meet this requirement with the LEAST amount of operational overhead? (Choose two.)</p><ol><li>✅ Create an Amazon S3 bucket. Configure the S3 bucket to host a static webpage. Upload the custom error pages to Amazon S3.</li><li>Create an Amazon CloudWatch alarm to invoke an AWS Lambda function if the ALB health check response Target.FailedHealthChecks is greater than 0. Configure the Lambda function to modify the forwarding rule at the ALB to point to a publicly accessible web server.</li><li>Modify the existing Amazon Route 53 records by adding health checks. Configure a fallback target if the health check fails. Modify DNS records to point to a publicly accessible webpage.</li><li>Create an Amazon CloudWatch alarm to invoke an AWS Lambda function if the ALB health check response Elb.InternalError is greater than 0. Configure the Lambda function to modify the forwarding rule at the ALB to point to a publicaccessible web server.</li><li>✅ Add a custom error response by configuring a CloudFront custom error page. Modify DNS records to point to a publicly accessible web page.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ 5️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/zh_cn/AmazonCloudFront/latest/DeveloperGuide/custom-error-pages-procedure.html">配置错误响应行为</a>  </p><blockquote><p>您可以通过多个选项，管理 CloudFront 在出错时如何进行响应。要配置自定义错误响应，您可以使用 CloudFront 控制台、CloudFront API 或 AWS CloudFormation。无论您选择哪种方式来更新配置，请考虑以下提示和建议：</p><ul><li>在 CloudFront 可访问的位置保存自定义错误页面。建议您将这些页面存储在 Amazon S3 存储桶中，并且不要将它们与您的网站或应用程序的其余内容存储于同一位置。如果您将自定义错误页面与您的网站或应用程序存储在同一个源上，且源开始返回 5xx 错误，则 CloudFront 无法获取自定义错误页面，因为源服务器不可用。有关更多信息，请参阅将对象和自定义错误页面存储在不同的位置。</li></ul></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A &amp; E<br><a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/GeneratingCustomErrorResponses.html#custom-error-pages-procedure">https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/GeneratingCustomErrorResponses.html#custom-error-pages-procedure</a></p></blockquote><hr><h3 id="十一、Share-AWS-Resources-cross-accoutns-in-AWS-Organization"><a href="#十一、Share-AWS-Resources-cross-accoutns-in-AWS-Organization" class="headerlink" title="十一、Share AWS Resources cross accoutns in AWS Organization"></a>十一、Share AWS Resources cross accoutns in AWS Organization</h3><p>A company has many AWS accounts and uses AWS Organizations to manage all of them. A solutions architect must implement a solution that the company can use to share a common network across multiple accounts.<br>The company’s infrastructure team has a dedicated infrastructure account that has a VPC. The infrastructure team must use this account to manage the network. Individual accounts cannot have the ability to manage their own networks. However, individual accounts must be able to create AWS resources within subnets.<br>Which combination of actions should the solutions architect perform to meet these requirements? (Choose two.)</p><ol><li>❌ Create a transit gateway in the infrastructure account.</li><li>✅ Enable resource sharing from the AWS Organizations management account.</li><li>Create VPCs in each AWS account within the organization in AWS Organizations. Configure the VPCs to share the same CIDR range and subnets as the VPC in the infrastructure account. Peer the VPCs in each individual account with the VPC in the infrastructure account.</li><li>✅ Create a resource share in AWS Resource Access Manager in the infrastructure account. Select the specific AWS Organizations OU that will use the shared network. Select each subnet to associate with the resource share.</li><li>Create a resource share in AWS Resource Access Manager in the infrastructure account. Select the specific AWS Organizations OU that will use the shared network. Select each prefix list to associate with the resource share.</li></ol><blockquote><p>✨ 关键词：a common network across multiple accounts</p></blockquote><blockquote><p>1️⃣ 4️⃣ ❌ -&gt; 2️⃣ 4️⃣ ✅</p></blockquote><blockquote><p>💡 解析：组织中的其他账户不能管理网络，需要一个共通的账户单独管理网络。共通的账号拥有一个 <code>VPC</code>，同时，各个帐户必须能够在子网内创建 AWS 资源。<br>这里的重点似乎并不是网络，而是组织中其他账户在单一账户的 <code>VPC</code> 的 <code>子网</code> 中创建资源的能力。  </p><p>这里需要参考官方关于资源共享的文档：<a href="https://docs.aws.amazon.com/zh_cn/ram/latest/userguide/getting-started-sharing.html">共享您的 AWS 资源</a></p><blockquote><p>要使用共享您拥有的资源 AWS RAM，请执行以下操作：</p><ul><li>在 AWS Organizations中启用资源共享</li><li>创建资源共享</li></ul></blockquote><p>2️⃣ 是必须的措施。<br>再来看看<a href="https://docs.aws.amazon.com/zh_cn/ram/latest/userguide/what-is.html">什么是 AWS Resource Access Manager？</a></p><blockquote><p>AWS Resource Access Manager (AWS RAM) 可帮助您跨 AWS 账户、在组织或组织单位 (OU) 内以及与 AWS Identity and Access Management (IAM) 角色和用户针对受支持资源类型安全地共享资源。如果您有多个 AWS 账户，可以一次性创建一个资源，然后使用 AWS RAM 使该资源可供其他账户使用。如果您的账户由 AWS Organizations 管理，则您可以与组织中的所有其他账户共享资源，也可以仅与一个或多个指定组织单位 (OU) 所包含的账户共享资源。您还可以根据账户 ID 与特定 AWS 账户共享，而不管该账户是否属于组织。一些支持的资源类型还允许您与指定的 IAM 角色和用户进行共享。</p></blockquote><p>它是服务于 AWS 资源跨账户共享需求的。<br>而关于是附加到 <code>子网</code> 还是 <code>前缀</code>：<a href="https://docs.aws.amazon.com/zh_cn/ram/latest/userguide/shareable.html#shareable-vpc">可共享的资源 AWS - Amazon VPC</a></p><blockquote><table><thead><tr><th>资源类型和代码</th><th>应用场景</th><th>可以与IAM用户和角色共享</th><th>可以与组织外部的账户共享</th><th>可以使用客户托管权限</th><th>可以与服务主体共享</th></tr></thead><tbody><tr><td>前缀列表 <code>ec2:PrefixList</code></td><td>集中创建和管理前缀列表，并与其他人 AWS 账户 或您的组织共享。这允许在其资源中使用多个 AWS 账户 引用前缀列表，例如 VPC 安全组和子网路由表。有关更多信息，请参阅《Amazon VPC 用户指南》中的使用共享前缀列表。</td><td>否</td><td>是</td><td>否</td><td>否</td></tr><tr><td>子网 <code>ec2:Subnet</code></td><td>集中创建和管理子网，并与组织内的 AWS 账户 共享这些子网。这样，多个用户就可以将其应用程序资源 AWS 账户启动到集中管理状态VPCs。这些资源包括亚马逊EC2实例、亚马逊关系数据库服务 (RDS) 数据库、Amazon Redshift 集群和 AWS Lambda 函数。有关更多信息，请参阅《Amazon VPC 用户指南》中的使用VPC共享。</td><td>否</td><td>否</td><td>否</td><td>否</td></tr></tbody></table></blockquote><p>4️⃣ 和 5️⃣ 看起来都可以，4️⃣ 更贴合题意吧。  </p></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：Step B is needed because it enables the organization to share resourcesacrossaccounts.<br>Step D is needed because it allows the infrastructure account to share specific subnets with the other accounts in the organization, so that the other accounts can create resources within those subnets without having to manage their own networks.</p></blockquote><hr><h3 id="十二、AWS-PrivateLink-interface"><a href="#十二、AWS-PrivateLink-interface" class="headerlink" title="十二、AWS PrivateLink interface"></a>十二、AWS PrivateLink interface</h3><p>A company wants to use a third-party software-as-a-service (SaaS) application. The third-party SaaS application is consumed through several API calls. The third-party SaaS application also runs on AWS inside a VPC.<br>The company will consume the third-party SaaS application from inside a VPC. The company has internal security policies that mandate the use of private connectivity that does not traverse the internet. No resources that run in the company VPC are allowed to be accessed from outside the company’s VPC. All permissions must conform to the principles of least privilege.<br>Which solution meets these requirements?</p><ol><li>✅ Create an AWS PrivateLink interface VPC endpoint. Connect this endpoint to the endpoint service that the third-party SaaS application provides. Create a security group to limit the access to the endpoint. Associate the security group with the endpoint.</li><li>Create an AWS Site-to-Site VPN connection between the third-party SaaS application and the company VPC. Configure network ACLs to limit access across the VPN tunnels.</li><li>Create a VPC peering connection between the third-party SaaS application and the company VPUpdate route tables by adding the needed routes for the peering connection.</li><li>Create an AWS PrivateLink endpoint service. Ask the third-party SaaS provider to create an interface VPC endpoint for this endpoint service. Grant permissions for the endpoint service to the specificaccount of the third-party SaaS provider.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/zh_cn/vpc/latest/privatelink/privatelink-access-saas.html">通过以下方式访问 SaaS 产品 AWS PrivateLink</a></p><blockquote><p>下图显示了如何使用 VPC 端点连接到 SaaS 产品。服务提供商创建端点服务并向其客户授予端点服务的访问权限。作为服务使用者，您可以创建一个接口VPC终端节点，用于在您的 VPC 和终端节点服务中的一个或多个子网之间建立连接。<br><img src="https://image.senjianlu.com/blog/2024-12-27/endpoint-services.png" alt="PrivateLink 架构"></p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：AccessSaas products throgh AWS Private Linkis the answer.</p></blockquote><hr><h3 id="十三、A-variety-of-tools-to-perform-patching"><a href="#十三、A-variety-of-tools-to-perform-patching" class="headerlink" title="十三、A variety of tools to perform patching"></a>十三、A variety of tools to perform patching</h3><p>A company needs to implement a patching process for its servers. The on-premises servers and Amazon EC2 instances use a variety of tools to perform patching. Management requires a single report showing the patch status of all the servers and instances.<br>Which set of actions should a solutions architect take to meet these requirements?</p><ol><li>✅ Use AWS Systems Manager to manage patches on the on-premises servers and EC2 instances. Use Systems Manager to generate patch compliance reports.</li><li>Use AWS OpsWorks to manage patches on the on-premises servers and EC2 instances. Use Amazon QuickSight integration with OpsWorks to generate patch compliance reports.</li><li>Use an Amazon EventBridge rule to apply patches by scheduling an AWS Systems Manager patch remediation job. Use Amazon Inspector to generate patch compliance reports.</li><li>Use AWS OpsWorks to manage patches on the on-premises servers and EC2 instances. Use AWS X-Ray to post the patch status to AWS Systems Manager OpsCenter to generate patch compliance reports.</li></ol><blockquote><p>✨ 关键词：</p></blockquote><blockquote><p>1️⃣ ✅</p></blockquote><blockquote><p>💡 解析：<a href="https://docs.aws.amazon.com/zh_cn/prescriptive-guidance/latest/patch-management-hybrid-cloud/design-on-premises.html">混合云环境中本地实例的修补解决方案设计</a></p><blockquote><p>下图描述了另一种使用 Systems Manager 自定义清单选项修补本地实例的方法。此过程是我们前面描述的针对可变 EC2 实例的自动修补解决方案的扩展。<br><img src="https://image.senjianlu.com/blog/2024-12-27/patching-process-on-premises.png" alt="Systems Manager 修补流程">  </p></blockquote></blockquote><blockquote><p>👨‍👨‍👦‍👦 社区讨论：A is correct. AWS Systems Manager can manage patches on both on-premises serversand EC2 instancesand can generate patch compliance reports. AWS OpsWorksand Amazon Inspector are not specifically designed for patch management and therefore would not be the best choice for this use case. Using Amazon EventBridge rule and AWS X-Ray to generate patch compliance reports is not a practical solution as theyare not designed for patch management reporting.</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;来源：&lt;a href=&quot;https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional-sap-c02/&quot;&gt;Amazon AWS Certified Solutions Architect - Professional SAP-C02 Exam&lt;/a&gt;&lt;br&gt;13 题 (No.1 ~ No.13)，仅供自己复习使用。&lt;br&gt;如果侵权请联系删除。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="备考" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%A4%87%E8%80%83/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="每日练习" scheme="https://senjianlu.com/tags/%E6%AF%8F%E6%97%A5%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>AWS 知识点 - 云安全 (Cloud Security) - 拓展（针对 SAP-C02 认证）</title>
    <link href="https://senjianlu.com/2024/12/26/knowledge_cloud_security_extend/"/>
    <id>https://senjianlu.com/2024/12/26/knowledge_cloud_security_extend/</id>
    <published>2024-12-26T04:30:00.000Z</published>
    <updated>2024-12-26T05:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AWS 云安全相关知识点。</p></blockquote><span id="more"></span><hr><h1 id="信封加密-Envelope-Encryption"><a href="#信封加密-Envelope-Encryption" class="headerlink" title="信封加密 (Envelope Encryption)"></a>信封加密 (Envelope Encryption)</h1><h3 id="一、信封加密基本概念和优势"><a href="#一、信封加密基本概念和优势" class="headerlink" title="一、信封加密基本概念和优势"></a>一、信封加密基本概念和优势</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_envelope_encryption_01.png" alt="信封加密基本概念和优势"></p><ul><li>⭐ <strong>不使用主密钥直接加密数据</strong></li></ul><h3 id="二、加密流程"><a href="#二、加密流程" class="headerlink" title="二、加密流程"></a>二、加密流程</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_envelope_encryption_02.png" alt="加密流程"></p><ul><li>最后存储的是加密后的文件和<strong>密文</strong>数据密钥</li></ul><h3 id="三、解密流程"><a href="#三、解密流程" class="headerlink" title="三、解密流程"></a>三、解密流程</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_envelope_encryption_03.png" alt="解密流程"></p><hr><h1 id="网络-ACL-Network-ACLs"><a href="#网络-ACL-Network-ACLs" class="headerlink" title="网络 ACL (Network ACLs)"></a>网络 ACL (Network ACLs)</h1><h3 id="一、网络-ACL-基本概念"><a href="#一、网络-ACL-基本概念" class="headerlink" title="一、网络 ACL 基本概念"></a>一、网络 ACL 基本概念</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_acl_01.png" alt="网络 ACL 基本概念"></p><h3 id="二、安全组和网络-ACL-的差异"><a href="#二、安全组和网络-ACL-的差异" class="headerlink" title="二、安全组和网络 ACL 的差异"></a>二、安全组和网络 ACL 的差异</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_acl_02.png" alt="安全组和网络 ACL 的差异"></p><ul><li><code>网络 ACL</code> 会按数字顺序（数字越小优先级越高）处理所有规则来决定是否允许数据流</li><li><code>网络 ACL</code> 自动运用于相应 <code>子网</code> 中的所有实例</li><li>一个 <code>网络 ACL</code> 可以与多个 <code>子网</code> 关联</li><li>⚠ 一个 <code>子网</code> 只能与一个 <code>网络 ACL</code> 关联</li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;AWS 云安全相关知识点。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="知识点" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAA" scheme="https://senjianlu.com/tags/SAA/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - 東京都立中央図書館 旧「こどもの城」周辺へ移転の方向性示す</title>
    <link href="https://senjianlu.com/2024/12/26/translate_news_nhk_20241225_k10014678891000/"/>
    <id>https://senjianlu.com/2024/12/26/translate_news_nhk_20241225_k10014678891000/</id>
    <published>2024-12-26T00:40:00.000Z</published>
    <updated>2024-12-26T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>都政府展示了将东京都立中央图书馆移动到旧的孩子城周边的想法</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2024-12-25 21:32</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20241225/k10014678891000.html">東京都立中央図書館 旧「こどもの城」周辺へ移転の方向性示す</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>老朽化｜ろうきゅうか⓪</li><li>周辺｜しゅうへん⓪</li><li>有栖川宮｜ありすがわのみや</li><li>劇場｜げきじょう⓪</li></ol><hr><p>老朽化<sup><a href="">ろうきゅうか</a></sup>が進んでいる東京 港区の都立中央図書館について、都は渋谷区の旧「こどもの城<sup><a href="">しろ</a></sup>」を含む周辺の都有地へ移転する方向性を示しました。</p><blockquote><p>对于持续老化的东京都立图书馆，都政府表示想往包含旧的孩子城周边的都政府所有地转移。</p></blockquote><p>25日、渋谷区の子どもの文化交流施設、旧「こどもの城」や旧青山病院を含む周辺<sup><a href="">しゅうへん</a></sup>都有地の活用方法について有識者が集まって検討する会がオンラインで開かれました。</p><blockquote><p>25 日，就如何使用旧涉谷区孩子们的文化交流设施，（还有）包括旧的孩子城和旧青山医院的周边的都政府所有地，有识之士们聚集并在线上召开了探讨会。</p></blockquote><p>この中で、都側からは建設から50年を超えて老朽化が進んでいる港区の有栖川宮<sup><a href="">ありすがわのみや</a></sup>記念公園にある都立中央図書館についてこの地区に移転する方向性が示されました。</p><blockquote><p>在这其中，都政府侧表示想将建立超过 50 年的、持续腐朽的坐落于港区有栖川宮纪念公园的都立中央图书馆迁移到这个地方。</p></blockquote><p>新たな図書館には、調査や研究といった従来の役割だけでなく、交流や創造活動を生み出す機能を持たせたいとしています。</p><blockquote><p>同时表示新的图书馆，将不仅局限于调查和研究等一直以来的功能，还希望诞生出交流和创造活动等的功能。</p></blockquote><p>また、この地区にデジタル技術に対応した1200席規模の新たな劇場<sup><a href="">げきじょう</a></sup>を整備し、子どもが、芸術文化に触れる機会を設けたいとしています。</p><blockquote><p>并且还希望在这个地方准备使用了数字技术的 1200 个席位规模的新的剧场，为孩子们创造接触艺术文化的机会。</p></blockquote><p>25日の検討会では反対意見はなく、都はこの方向性をさらに具体化させることにしています。</p><blockquote><p>25 日的研讨会上没有反对意见，都政府正在将目标方向具体化。</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;都政府展示了将东京都立中央图书馆移动到旧的孩子城周边的想法&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>AWS 知识点 - 亚马逊虚拟私有云 (Amazon Virtual Private Cloud, VPC) - 拓展（针对 SAP-C02 认证）</title>
    <link href="https://senjianlu.com/2024/12/26/knowledge_vpc_extend/"/>
    <id>https://senjianlu.com/2024/12/26/knowledge_vpc_extend/</id>
    <published>2024-12-26T00:00:00.000Z</published>
    <updated>2024-12-26T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>借助 Amazon Virtual Private Cloud (Amazon VPC)，您可以在自己定义的逻辑隔离的虚拟网络中启动 AWS 资源。<br>这个虚拟网络与您在数据中心中运行的传统网络极其相似，并会为您提供使用 AWS 的可扩展基础设施的优势。</p></blockquote><span id="more"></span><hr><h1 id="AWS-PrivateLink"><a href="#AWS-PrivateLink" class="headerlink" title="AWS PrivateLink"></a>AWS PrivateLink</h1><h3 id="一、AWS-PrivateLink-基本概念"><a href="#一、AWS-PrivateLink-基本概念" class="headerlink" title="一、AWS PrivateLink 基本概念"></a>一、AWS PrivateLink 基本概念</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_privatelink_01.png" alt="AWS PrivateLink 基本概念"></p><ul><li>⭐ <strong>通过为自己的应用程序配置终端节点，使其他用户可以通过 AWS 的私有访问访问它</strong></li><li>⭐ <strong>其他用户需要通过创建 VPC 接口终端节点 (Interface VPC Endpoint) 来访问应用程序</strong></li></ul><h3 id="二、使用-PrivateLink-的集中化进行-Web-访问过滤的解决方案"><a href="#二、使用-PrivateLink-的集中化进行-Web-访问过滤的解决方案" class="headerlink" title="二、使用 PrivateLink 的集中化进行 Web 访问过滤的解决方案"></a>二、使用 PrivateLink 的集中化进行 Web 访问过滤的解决方案</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_privatelink_02.png" alt="PrivateLink 使用案例"></p><hr><h1 id="AWS-与本地网络间的高可用连接方案"><a href="#AWS-与本地网络间的高可用连接方案" class="headerlink" title="AWS 与本地网络间的高可用连接方案"></a>AWS 与本地网络间的高可用连接方案</h1><h3 id="一、连接高可用的基本概念"><a href="#一、连接高可用的基本概念" class="headerlink" title="一、连接高可用的基本概念"></a>一、连接高可用的基本概念</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_network_ha_01.png" alt="连接高可用的基本概念"></p><ul><li>避免单点故障 (Single Point of Failure)<ul><li>双设备</li><li>双线路</li><li>多服务提供商</li></ul></li><li>尽量使用动态路由协议（自动切换）</li></ul><h3 id="二、冗余-Active-Active-VPN-连接"><a href="#二、冗余-Active-Active-VPN-连接" class="headerlink" title="二、冗余 Active&#x2F;Active VPN 连接"></a>二、冗余 Active&#x2F;Active VPN 连接</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_network_ha_02.png" alt="冗余 Active&#x2F;Active VPN 连接"></p><ul><li>两个数据中心的内部连接故障后，仍然可以通过 AWS 的 <code>CloudHub</code> 实现互相访问</li></ul><h3 id="三、冗余的-Active-Active-AWS-Direct-Connect-DX-线路"><a href="#三、冗余的-Active-Active-AWS-Direct-Connect-DX-线路" class="headerlink" title="三、冗余的 Active&#x2F;Active AWS Direct Connect (DX) 线路"></a>三、冗余的 Active&#x2F;Active AWS Direct Connect (DX) 线路</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_network_ha_03.png" alt="冗余的 Active&#x2F;Active AWS Direct Connect (DX) 线路"></p><h3 id="四、Active-AWS-Direct-Connect-DX-为主-VPN-为辅"><a href="#四、Active-AWS-Direct-Connect-DX-为主-VPN-为辅" class="headerlink" title="四、Active AWS Direct Connect (DX) 为主 VPN 为辅"></a>四、Active AWS Direct Connect (DX) 为主 VPN 为辅</h3><p><img src="https://image.senjianlu.com/blog/2024-12-27/aws_network_ha_04.png" alt="Active AWS Direct Connect (DX) 为主 VPN 为辅"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;借助 Amazon Virtual Private Cloud (Amazon VPC)，您可以在自己定义的逻辑隔离的虚拟网络中启动 AWS 资源。&lt;br&gt;这个虚拟网络与您在数据中心中运行的传统网络极其相似，并会为您提供使用 AWS 的可扩展基础设施的优势。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="知识点" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAA" scheme="https://senjianlu.com/tags/SAA/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
    <category term="VPC" scheme="https://senjianlu.com/tags/VPC/"/>
    
  </entry>
  
  <entry>
    <title>日语翻译 - 新闻 - 熊本など 外国人エンジニアのビザ取得要件緩和へ 人手不足懸念</title>
    <link href="https://senjianlu.com/2024/12/25/translate_news_nhk_20241224_k10014678201000/"/>
    <id>https://senjianlu.com/2024/12/25/translate_news_nhk_20241224_k10014678201000/</id>
    <published>2024-12-25T00:40:00.000Z</published>
    <updated>2024-12-25T01:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>熊本县等担忧人手不足，放宽外国工程师的签证条件</p></blockquote><span id="more"></span><hr><ul><li>来源：NHK</li><li>日期：2024-12-24 21:47</li><li>链接：<a href="https://www3.nhk.or.jp/news/html/20241224/k10014678201000.html">熊本など 外国人エンジニアのビザ取得要件緩和へ 人手不足懸念</a></li></ul><hr><p><strong>🌟 单词：</strong></p><ol><li>雇い｜やとい②</li><li>緩和｜かんわ⓪</li><li>官邸｜かんてい⓪</li><li>諮問｜しもん⓪<sub><u>咨问，咨询，咨议。</u></sub></li><li>北九州市｜きたきゅうしゅうし</li><li>ドローン｜どろーん②<sub><u>(drone) 无人机。</u></sub></li><li>細かい｜こまかい③</li></ol><hr><p>政府は半導体工場の進出などを念頭に人手不足が懸念されるとして、熊本県などで外国人エンジニアを雇い<sup><a href="">やとい</a></sup>やすくするため、ビザの取得要件を緩和<sup><a href="">かんわ</a></sup>することになりました。</p><blockquote><p>政府担忧半导体工厂的引进之后会人手不足，因此熊本县为了让雇用外国工程师更加容易，将签证的获取条件放宽。</p></blockquote><p>政府は24日、総理大臣官邸<sup><a href="">かんてい</a></sup>で、地域を限って大胆<sup><a href="">だいたん</a></sup>な規制緩和などを行う国家戦略特区の諮問<sup><a href="">しもん</a></sup>会議を開き、32件の事業の認定が報告されました。</p><blockquote><p>政府于 24 日，在总理大臣官邸召开了就“（设立）国家战略特区来进行特定地区的大胆的条件放宽策略”的咨询会议，会上报告了对 32 个行业的认定。  </p></blockquote><p>このうち熊本県と、福岡市、北九州<sup><a href="">きゅうしゅう</a></sup>市では台湾の半導体大手TSMCの工場の進出などを念頭に、人手不足が懸念されるとして、外国人エンジニアなどを雇いやすくするため、ビザの取得要件を緩和するとしています。</p><blockquote><p>其中，熊本县、福冈市、北九州市考虑到台湾大型半导体公司 TSMC 的工厂进驻等，担心人手不足，为了便于雇用外国工程师等，将放宽签证的取得条件。</p></blockquote><p>また<br>▽北海道では、銀行がGX＝グリーントランスフォーメーション関連事業に出資しやすくなるほか<br>▽石川県加賀市などでは、自動運転やドローンなどの実証実験を行う際に、手続きがワンストップでできるようになります。</p><blockquote><p>并且<br>▽ 在北海道，银行对绿色发展相关事业的投资将变得更加容易，<br>▽ 除此以外，在石川县加贺市，在进行自动驾驶和无人机的实验时，手续将变得一次就能完成。</p></blockquote><p>会議で石破総理大臣は「地域の課題を起点とする規制改革を大胆に進めていく中で、特区は重要だ。地域の期待によりきめ細かく<sup><a href="">こまかく</a></sup>応えることができる制度となるよう検討を進めてほしい」と述べました。</p><blockquote><p>在会议上石破总理大臣说到：“在以地区的问题作为起点大胆推进制度改革的情况中，特区是非常重要的。希望大家能推进探讨出更能细致地满足地方期待的制度。”</p></blockquote><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;熊本县等担忧人手不足，放宽外国工程师的签证条件&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="日语学习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="翻译练习" scheme="https://senjianlu.com/categories/%E6%97%A5%E8%AF%AD%E5%AD%A6%E4%B9%A0/%E7%BF%BB%E8%AF%91%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="日语" scheme="https://senjianlu.com/tags/%E6%97%A5%E8%AF%AD/"/>
    
    <category term="翻译" scheme="https://senjianlu.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="新闻" scheme="https://senjianlu.com/tags/%E6%96%B0%E9%97%BB/"/>
    
  </entry>
  
  <entry>
    <title>AWS 实操 - 身份与联合身份验证（针对 SAP-C02 认证）</title>
    <link href="https://senjianlu.com/2024/12/24/hands_on_identity/"/>
    <id>https://senjianlu.com/2024/12/24/hands_on_identity/</id>
    <published>2024-12-24T04:15:00.000Z</published>
    <updated>2024-12-24T04:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>AWS 身份与联合身份验证相关实际操作。</p></blockquote><span id="more"></span><hr><h1 id="创建跨账户-IAM-角色访问（Creating-Cross-Account-IAM-Roles）"><a href="#创建跨账户-IAM-角色访问（Creating-Cross-Account-IAM-Roles）" class="headerlink" title="创建跨账户 IAM 角色访问（Creating Cross-Account IAM Roles）"></a>创建跨账户 IAM 角色访问（Creating Cross-Account IAM Roles）</h1><h3 id="一、最终目标"><a href="#一、最终目标" class="headerlink" title="一、最终目标"></a>一、最终目标</h3><p><img src="https://image.senjianlu.com/blog/2024-12-24/aws_identity_identity_account_architecture_change_role.png" alt="最终目标"></p><h3 id="二、在生产环境中创建-IAM-角色"><a href="#二、在生产环境中创建-IAM-角色" class="headerlink" title="二、在生产环境中创建 IAM 角色"></a>二、在生产环境中创建 IAM 角色</h3><blockquote><p>全程通过生产环境账户进行操作。</p></blockquote><ol><li>进入 <code>IAM</code> 控制台</li><li>选择角色</li><li>创建角色<ol><li>⭐ <strong>选择受信任的实体类型为</strong><u><strong>其他 AWS 账户</strong></u></li><li>输入身份账户的账户 ID</li><li>⭐ 给予这个角色 <code>S3</code> 存储桶的完全访问权限</li><li>填写角色名称并创建</li></ol></li><li>角色创建成功后确认信息<ol><li>角色 ARN</li><li>⭐ 用以切换角色的链接</li><li>信任关系（策略）</li></ol></li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_01.png" alt="选择受信任的实体类型为其他 AWS 账户"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_02.png" alt="输入身份账户的账户 ID"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_03.png" alt="给予这个角色 S3 存储桶的完全访问权限"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_04.png" alt="角色 ARN 和用以切换角色的链接"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_05.png" alt="信任关系（策略）">  </p><h3 id="三、在身份账户中创建-IAM-用户"><a href="#三、在身份账户中创建-IAM-用户" class="headerlink" title="三、在身份账户中创建 IAM 用户"></a>三、在身份账户中创建 IAM 用户</h3><blockquote><p>全程通过身份账户进行操作。</p></blockquote><ol><li>进入 <code>IAM</code> 控制台</li><li>选择用户</li><li>创建 <code>IAM 用户</code><ol><li>选择密码 - AWS 管理控制台访问</li><li>不选择任何权限</li><li>不添加标签</li><li>确认用户信息并创建</li></ol></li><li>创建成功后为 <code>IAM 用户</code> 添加内联策略<ol><li>选择策略编辑的 JSON 选项卡</li><li>填入如下策略 <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sts:AssumeRole&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// 这里的 Resource 就是生产环境中的角色 ARN</span></span><br><span class="line">        <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:iam::PRODUCTION-ACCOUNT-ID:role/UpdateApp&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li>填写名称并创建策略</li></ol></li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_06.png" alt="添加内联策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_07.png" alt="编辑策略">  </p><h3 id="四、使用-IAM-用户登录-AWS-控制台并切换角色"><a href="#四、使用-IAM-用户登录-AWS-控制台并切换角色" class="headerlink" title="四、使用 IAM 用户登录 AWS 控制台并切换角色"></a>四、使用 IAM 用户登录 AWS 控制台并切换角色</h3><blockquote><p>全程通过身份账户的 IAM 用户进行操作。</p></blockquote><ol><li>使用 <code>IAM 用户</code> 登录身份账户<ul><li>账户：身份账户的账户 ID</li><li>用户名：<code>IAM 用户</code> 用户名</li><li>密码：<code>IAM 用户</code> 密码</li></ul></li><li>访问生产账户的角色的切换链接<ol><li>确认账户和角色</li><li>填写显示名称</li><li>切换角色</li></ol></li><li>角色切换成功后访问 <code>S3</code> 存储桶确认权限生效</li><li>可以在右上角的角色历史记录中轻松切换其他角色</li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_08.png" alt="角色切换页面"><br><img src="https://image.senjianlu.com/blog/2024-12-24/creating_cross_account_iam_roles_09.png" alt="角色历史记录">  </p><hr><h1 id="创建-AWS-Organizations-和-SCP"><a href="#创建-AWS-Organizations-和-SCP" class="headerlink" title="创建 AWS Organizations 和 SCP"></a>创建 AWS Organizations 和 SCP</h1><h3 id="一、最终目标-1"><a href="#一、最终目标-1" class="headerlink" title="一、最终目标"></a>一、最终目标</h3><p><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_01.png" alt="最终目标"></p><h3 id="二、创建-AWS-Organizations-并邀请其他-AWS-用户"><a href="#二、创建-AWS-Organizations-并邀请其他-AWS-用户" class="headerlink" title="二、创建 AWS Organizations 并邀请其他 AWS 用户"></a>二、创建 AWS Organizations 并邀请其他 AWS 用户</h3><blockquote><p>全程通过组织的管理账户（主账户）进行操作。</p></blockquote><ol><li>进入 <code>AWS Organizations</code> 控制台</li><li>创建组织</li><li>添加账户<ol><li>选择邀请现有 AWS 账户</li><li>输入想要邀请的账户 ID</li><li>点击邀请</li></ol></li><li>等待成员账户接受邀请</li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_02.png" alt="在 AWS Organizations 控制台创建组织"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_03.png" alt="创建完成后的组织结构"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_04.png" alt="邀请其他账户"></p><h3 id="三、接受邀请并加入组织"><a href="#三、接受邀请并加入组织" class="headerlink" title="三、接受邀请并加入组织"></a>三、接受邀请并加入组织</h3><blockquote><p>全程通过组织的成员账户进行操作。</p></blockquote><ol><li>进入 <code>AWS Organizations</code> 控制台</li><li>查看邀请并接受</li><li><em>确认 SCP 策略被附加到该账户（S3 操作拒绝）</em></li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_05.png" alt="查看邀请并接受"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_12.png" alt="被附加相应 SCP 权限后丧失了对 S3 存储桶的操作权限">  </p><h3 id="四、为-IAM-用户添加策略"><a href="#四、为-IAM-用户添加策略" class="headerlink" title="四、为 IAM 用户添加策略"></a>四、为 IAM 用户添加策略</h3><blockquote><p>全程通过组织的管理账户（主账户）进行操作。</p></blockquote><ol><li>进入 <code>AWS Organizations</code> 控制台</li><li>选择策略</li><li>选择服务控制策略并启用</li><li>默认的策略 FullAWSAccess 附加到每个根、OU 和用户并允许所有服务的所有操作</li><li>创建策略<ol><li>输入策略名称</li><li>编辑策略<ol><li>添加操作 - 选择 <code>S3</code> 的所有操作</li><li>添加资源 - 选额 <code>S3</code> 的所有资源</li></ol></li><li>确认策略内容并创建</li></ol></li><li>等待策略创建成功</li><li>切换到 AWS 账户</li><li>将策略附加到成员账户上<ol><li>进入成员账户详情</li><li>选择策略选项卡</li><li>点击附加</li><li>选择刚刚创建的策略并附加</li></ol></li><li><em>之后前往相应成员账户确认策略生效（S3 操作拒绝）</em></li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_06.png" alt="选择服务控制策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_07.png" alt="启用服务控制策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_08.png" alt="创建策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_09.png" alt="编辑策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_10.png" alt="成员账户详情中默认的策略"><br><img src="https://image.senjianlu.com/blog/2024-12-24/create_aws_organizations_and_scp_11.png" alt="选择刚刚创建的策略并附加给成员用户"></p><hr><h1 id="集中式日志架构-Centralized-Logging-Architecture"><a href="#集中式日志架构-Centralized-Logging-Architecture" class="headerlink" title="集中式日志架构 (Centralized Logging Architecture)"></a>集中式日志架构 (Centralized Logging Architecture)</h1><h3 id="一、最终目标-2"><a href="#一、最终目标-2" class="headerlink" title="一、最终目标"></a>一、最终目标</h3><p><img src="https://image.senjianlu.com/blog/2024-12-26/aws_identity_centralized_logging_architecture_create.png" alt="最终目标"></p><h3 id="二、在中央账户建立日志收集用的-S3-存储桶"><a href="#二、在中央账户建立日志收集用的-S3-存储桶" class="headerlink" title="二、在中央账户建立日志收集用的 S3 存储桶"></a>二、在中央账户建立日志收集用的 S3 存储桶</h3><ol><li>进入 <code>S3</code> 控制台</li><li>创建存储 <code>CloudTrail</code> 日志的存储桶</li><li>配置存储桶策略<ol><li>选择存储桶</li><li>编辑存储桶策略</li><li>添加策略<blockquote><p>允许日志收集账户的 <code>CloudTrail</code> 进行 <code>s3:GetBucketAcl</code> 和 <code>s3:PutObject</code> 操作。</p> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AWSCloudTrailAclCheck20150319&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Principal&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cloudtrail.amazonaws.com&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s3:GetBucketAcl&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 修改为对应存储桶的 ARN</span></span><br><span class="line">            <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::iloveawscn-central-config&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;Sid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;AWSCloudTrailWrite20150319&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Principal&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;Service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cloudtrail.amazonaws.com&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s3:PutObject&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 修改为对应存储桶的 ARN</span></span><br><span class="line">            <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:s3:::iloveawscn-central-config/*&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;Condition&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;StringEquals&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                    <span class="attr">&quot;s3:x-amz-acl&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bucket-owner-full-control&quot;</span></span><br><span class="line">                <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></blockquote></li><li>保存策略</li></ol></li><li>创建存储 <code>AWS Config</code> 日志的存储桶<ol><li>选择存储桶</li><li>编辑存储桶策略</li><li>添加策略</li><li>保存策略</li></ol></li><li>日志收集账户配置完成后确认日志收集状态</li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-26/aws_identity_centralized_logging_architecture_create_03.png" alt="用以确认的 CheckFile 文件生成成功"></p><h3 id="三、在日志收集账户将日志转发到存储桶"><a href="#三、在日志收集账户将日志转发到存储桶" class="headerlink" title="三、在日志收集账户将日志转发到存储桶"></a>三、在日志收集账户将日志转发到存储桶</h3><ol><li>打开 <code>CloudTrail</code> 控制台</li><li>创建跟踪 (Trail)<ol><li>输入跟踪名称</li><li>存储位置选择现有的 <code>S3</code> 存储桶</li><li>输入中央账户的 <code>S3</code> 存储桶的名称</li><li>创建跟踪</li></ol></li><li>打开 <code>AWS Config</code> 控制台</li><li>选择设置</li><li>编辑设置<ol><li>选择从另一个账户选择存储桶</li><li>输入中央账户的 <code>S3</code> 存储桶的名称</li><li>保存设置</li></ol></li></ol><p><img src="https://image.senjianlu.com/blog/2024-12-26/aws_identity_centralized_logging_architecture_create_01.png" alt="CloudTrail - 创建跟踪并配置存储桶"><br><img src="https://image.senjianlu.com/blog/2024-12-26/aws_identity_centralized_logging_architecture_create_02.png" alt="AWS Config - 编辑设置配置存储桶"></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;AWS 身份与联合身份验证相关实际操作。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="运维笔记" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/"/>
    
    <category term="实操" scheme="https://senjianlu.com/categories/%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/%E5%AE%9E%E6%93%8D/"/>
    
    
    <category term="AWS" scheme="https://senjianlu.com/tags/AWS/"/>
    
    <category term="SAA" scheme="https://senjianlu.com/tags/SAA/"/>
    
    <category term="SAP" scheme="https://senjianlu.com/tags/SAP/"/>
    
  </entry>
  
</feed>
